<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="jaxen"><sessioninfo id="anh5-2f336233" start="1661454076033" dump="1661454082356"/><package name="org/jaxen/saxpath/base"><class name="org/jaxen/saxpath/base/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;II)V" line="61"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenType" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenType" desc="(I)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParseText" desc="(Ljava/lang/String;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenText" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenBegin" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenBegin" desc="(I)V" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenEnd" desc="()I" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenEnd" desc="(I)V" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/base/XPathLexer" sourcefilename="XPathLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPath" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setXPath" desc="(Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextToken" desc="()Lorg/jaxen/saxpath/base/Token;" line="72"><counter type="INSTRUCTION" missed="0" covered="162"/><counter type="BRANCH" missed="0" covered="37"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identifierOrOperatorName" desc="()Lorg/jaxen/saxpath/base/Token;" line="288"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identifier" desc="()Lorg/jaxen/saxpath/base/Token;" line="298"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operatorName" desc="()Lorg/jaxen/saxpath/base/Token;" line="319"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mod" desc="()Lorg/jaxen/saxpath/base/Token;" line="347"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="()Lorg/jaxen/saxpath/base/Token;" line="369"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="()Lorg/jaxen/saxpath/base/Token;" line="391"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="()Lorg/jaxen/saxpath/base/Token;" line="413"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="number" desc="()Lorg/jaxen/saxpath/base/Token;" line="432"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whitespace" desc="()Lorg/jaxen/saxpath/base/Token;" line="470"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comma" desc="()Lorg/jaxen/saxpath/base/Token;" line="496"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="()Lorg/jaxen/saxpath/base/Token;" line="507"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="()Lorg/jaxen/saxpath/base/Token;" line="518"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="()Lorg/jaxen/saxpath/base/Token;" line="528"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dollar" desc="()Lorg/jaxen/saxpath/base/Token;" line="538"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pipe" desc="()Lorg/jaxen/saxpath/base/Token;" line="548"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="at" desc="()Lorg/jaxen/saxpath/base/Token;" line="559"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="colon" desc="()Lorg/jaxen/saxpath/base/Token;" line="570"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleColon" desc="()Lorg/jaxen/saxpath/base/Token;" line="580"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEquals" desc="()Lorg/jaxen/saxpath/base/Token;" line="592"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="relationalOperator" desc="()Lorg/jaxen/saxpath/base/Token;" line="604"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="star" desc="()Lorg/jaxen/saxpath/base/Token;" line="649"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="()Lorg/jaxen/saxpath/base/Token;" line="661"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dots" desc="()Lorg/jaxen/saxpath/base/Token;" line="685"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftBracket" desc="()Lorg/jaxen/saxpath/base/Token;" line="711"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightBracket" desc="()Lorg/jaxen/saxpath/base/Token;" line="722"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftParen" desc="()Lorg/jaxen/saxpath/base/Token;" line="733"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightParen" desc="()Lorg/jaxen/saxpath/base/Token;" line="744"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="slashes" desc="()Lorg/jaxen/saxpath/base/Token;" line="755"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LA" desc="(I)C" line="780"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consume" desc="()V" line="788"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreChars" desc="()Z" line="792"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="949"/><counter type="BRANCH" missed="13" covered="89"/><counter type="LINE" missed="0" covered="230"/><counter type="COMPLEXITY" missed="13" covered="85"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/base/XPathReader" sourcefilename="XPathReader.java"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathHandler" desc="()Lorg/jaxen/saxpath/XPathHandler;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setXPathHandler" desc="(Lorg/jaxen/saxpath/XPathHandler;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUpParse" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathExpr" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="()V" line="173"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionCall" desc="()V" line="179"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arguments" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterExpr" desc="()V" line="217"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variableReference" desc="()V" line="252"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="locationPath" desc="(Z)V" line="271"><counter type="INSTRUCTION" missed="18" covered="16"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteLocationPath" desc="()V" line="297"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="relativeLocationPath" desc="()V" line="342"><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="steps" desc="()V" line="365"><counter type="INSTRUCTION" missed="1" covered="58"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="()V" line="424"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="axisSpecifier" desc="()I" line="454"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeTest" desc="(I)V" line="482"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeTypeTest" desc="(I)V" line="507"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameTest" desc="(I)V" line="558"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbrStep" desc="()V" line="600"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predicates" desc="()V" line="620"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predicate" desc="()V" line="629"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predicateExpr" desc="()V" line="641"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expr" desc="()V" line="645"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orExpr" desc="()V" line="649"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andExpr" desc="()V" line="668"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalityExpr" desc="()V" line="687"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="relationalExpr" desc="()V" line="713"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="1" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additiveExpr" desc="()V" line="760"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplicativeExpr" desc="()V" line="785"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unaryExpr" desc="()V" line="819"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionExpr" desc="()V" line="837"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(I)Lorg/jaxen/saxpath/base/Token;" line="856"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LA" desc="(I)I" line="871"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LT" desc="(I)Lorg/jaxen/saxpath/base/Token;" line="877"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNodeTypeName" desc="(Lorg/jaxen/saxpath/base/Token;)Z" line="887"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSyntaxException" desc="(Ljava/lang/String;)Lorg/jaxen/saxpath/XPathSyntaxException;" line="903"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwInvalidAxis" desc="(Ljava/lang/String;)V" line="912"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="1252"/><counter type="BRANCH" missed="17" covered="152"/><counter type="LINE" missed="7" covered="380"/><counter type="COMPLEXITY" missed="17" covered="121"/><counter type="METHOD" missed="0" covered="40"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/base/Verifier" sourcefilename="Verifier.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isXMLNCNameCharacter" desc="(C)Z" line="67"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLNCNameStartCharacter" desc="(C)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLLetter" desc="(C)Z" line="101"><counter type="INSTRUCTION" missed="704" covered="1083"/><counter type="BRANCH" missed="352" covered="362"/><counter type="LINE" missed="0" covered="358"/><counter type="COMPLEXITY" missed="352" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLCombiningChar" desc="(C)Z" line="474"><counter type="INSTRUCTION" missed="802" covered="5"/><counter type="BRANCH" missed="321" covered="1"/><counter type="LINE" missed="161" covered="1"/><counter type="COMPLEXITY" missed="161" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLExtender" desc="(C)Z" line="674"><counter type="INSTRUCTION" missed="72" covered="5"/><counter type="BRANCH" missed="29" covered="1"/><counter type="LINE" missed="15" covered="1"/><counter type="COMPLEXITY" missed="15" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLDigit" desc="(C)Z" line="706"><counter type="INSTRUCTION" missed="137" covered="15"/><counter type="BRANCH" missed="55" covered="5"/><counter type="LINE" missed="28" covered="3"/><counter type="COMPLEXITY" missed="28" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1718" covered="1143"/><counter type="BRANCH" missed="759" covered="385"/><counter type="LINE" missed="205" covered="365"/><counter type="COMPLEXITY" missed="559" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/base/TokenTypes" sourcefilename="TokenTypes.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTokenText" desc="(I)Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="75" covered="6"/><counter type="BRANCH" missed="34" covered="2"/><counter type="LINE" missed="34" covered="3"/><counter type="COMPLEXITY" missed="34" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="6"/><counter type="BRANCH" missed="34" covered="2"/><counter type="LINE" missed="35" covered="3"/><counter type="COMPLEXITY" missed="35" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Verifier.java"><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="25" mb="2" cb="12"/><line nr="84" mi="0" ci="10" mb="0" cb="4"/><line nr="101" mi="0" ci="5" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="2" ci="3" mb="1" cb="1"/><line nr="107" mi="2" ci="3" mb="1" cb="1"/><line nr="108" mi="2" ci="3" mb="1" cb="1"/><line nr="109" mi="2" ci="3" mb="1" cb="1"/><line nr="110" mi="2" ci="3" mb="1" cb="1"/><line nr="111" mi="2" ci="3" mb="1" cb="1"/><line nr="112" mi="2" ci="3" mb="1" cb="1"/><line nr="113" mi="2" ci="3" mb="1" cb="1"/><line nr="114" mi="2" ci="3" mb="1" cb="1"/><line nr="115" mi="2" ci="3" mb="1" cb="1"/><line nr="116" mi="2" ci="3" mb="1" cb="1"/><line nr="117" mi="2" ci="3" mb="1" cb="1"/><line nr="118" mi="2" ci="3" mb="1" cb="1"/><line nr="119" mi="2" ci="3" mb="1" cb="1"/><line nr="120" mi="2" ci="3" mb="1" cb="1"/><line nr="121" mi="2" ci="3" mb="1" cb="1"/><line nr="122" mi="2" ci="3" mb="1" cb="1"/><line nr="123" mi="2" ci="3" mb="1" cb="1"/><line nr="124" mi="2" ci="3" mb="1" cb="1"/><line nr="125" mi="2" ci="3" mb="1" cb="1"/><line nr="126" mi="2" ci="3" mb="1" cb="1"/><line nr="127" mi="2" ci="3" mb="1" cb="1"/><line nr="128" mi="2" ci="3" mb="1" cb="1"/><line nr="129" mi="2" ci="3" mb="1" cb="1"/><line nr="130" mi="2" ci="3" mb="1" cb="1"/><line nr="131" mi="2" ci="3" mb="1" cb="1"/><line nr="132" mi="2" ci="3" mb="1" cb="1"/><line nr="133" mi="2" ci="3" mb="1" cb="1"/><line nr="134" mi="2" ci="3" mb="1" cb="1"/><line nr="135" mi="2" ci="3" mb="1" cb="1"/><line nr="136" mi="2" ci="3" mb="1" cb="1"/><line nr="137" mi="2" ci="3" mb="1" cb="1"/><line nr="138" mi="2" ci="3" mb="1" cb="1"/><line nr="139" mi="2" ci="3" mb="1" cb="1"/><line nr="140" mi="2" ci="3" mb="1" cb="1"/><line nr="141" mi="2" ci="3" mb="1" cb="1"/><line nr="142" mi="2" ci="3" mb="1" cb="1"/><line nr="143" mi="2" ci="3" mb="1" cb="1"/><line nr="144" mi="2" ci="3" mb="1" cb="1"/><line nr="145" mi="2" ci="3" mb="1" cb="1"/><line nr="146" mi="2" ci="3" mb="1" cb="1"/><line nr="147" mi="2" ci="3" mb="1" cb="1"/><line nr="148" mi="2" ci="3" mb="1" cb="1"/><line nr="149" mi="2" ci="3" mb="1" cb="1"/><line nr="150" mi="2" ci="3" mb="1" cb="1"/><line nr="151" mi="2" ci="3" mb="1" cb="1"/><line nr="152" mi="2" ci="3" mb="1" cb="1"/><line nr="153" mi="2" ci="3" mb="1" cb="1"/><line nr="154" mi="2" ci="3" mb="1" cb="1"/><line nr="155" mi="2" ci="3" mb="1" cb="1"/><line nr="156" mi="2" ci="3" mb="1" cb="1"/><line nr="157" mi="2" ci="3" mb="1" cb="1"/><line nr="158" mi="2" ci="3" mb="1" cb="1"/><line nr="159" mi="2" ci="3" mb="1" cb="1"/><line nr="160" mi="2" ci="3" mb="1" cb="1"/><line nr="161" mi="2" ci="3" mb="1" cb="1"/><line nr="162" mi="2" ci="3" mb="1" cb="1"/><line nr="163" mi="2" ci="3" mb="1" cb="1"/><line nr="164" mi="2" ci="3" mb="1" cb="1"/><line nr="165" mi="2" ci="3" mb="1" cb="1"/><line nr="166" mi="2" ci="3" mb="1" cb="1"/><line nr="167" mi="2" ci="3" mb="1" cb="1"/><line nr="168" mi="2" ci="3" mb="1" cb="1"/><line nr="169" mi="2" ci="3" mb="1" cb="1"/><line nr="170" mi="2" ci="3" mb="1" cb="1"/><line nr="171" mi="2" ci="3" mb="1" cb="1"/><line nr="172" mi="2" ci="3" mb="1" cb="1"/><line nr="173" mi="2" ci="3" mb="1" cb="1"/><line nr="174" mi="2" ci="3" mb="1" cb="1"/><line nr="175" mi="2" ci="3" mb="1" cb="1"/><line nr="176" mi="2" ci="3" mb="1" cb="1"/><line nr="177" mi="2" ci="3" mb="1" cb="1"/><line nr="178" mi="2" ci="3" mb="1" cb="1"/><line nr="179" mi="2" ci="3" mb="1" cb="1"/><line nr="180" mi="2" ci="3" mb="1" cb="1"/><line nr="181" mi="2" ci="3" mb="1" cb="1"/><line nr="182" mi="2" ci="3" mb="1" cb="1"/><line nr="183" mi="2" ci="3" mb="1" cb="1"/><line nr="184" mi="2" ci="3" mb="1" cb="1"/><line nr="185" mi="2" ci="3" mb="1" cb="1"/><line nr="186" mi="2" ci="3" mb="1" cb="1"/><line nr="187" mi="2" ci="3" mb="1" cb="1"/><line nr="188" mi="2" ci="3" mb="1" cb="1"/><line nr="189" mi="2" ci="3" mb="1" cb="1"/><line nr="190" mi="2" ci="3" mb="1" cb="1"/><line nr="191" mi="2" ci="3" mb="1" cb="1"/><line nr="192" mi="2" ci="3" mb="1" cb="1"/><line nr="193" mi="2" ci="3" mb="1" cb="1"/><line nr="194" mi="2" ci="3" mb="1" cb="1"/><line nr="195" mi="2" ci="3" mb="1" cb="1"/><line nr="196" mi="2" ci="3" mb="1" cb="1"/><line nr="197" mi="2" ci="3" mb="1" cb="1"/><line nr="198" mi="2" ci="3" mb="1" cb="1"/><line nr="199" mi="2" ci="3" mb="1" cb="1"/><line nr="200" mi="2" ci="3" mb="1" cb="1"/><line nr="201" mi="2" ci="3" mb="1" cb="1"/><line nr="202" mi="2" ci="3" mb="1" cb="1"/><line nr="203" mi="2" ci="3" mb="1" cb="1"/><line nr="204" mi="2" ci="3" mb="1" cb="1"/><line nr="205" mi="2" ci="3" mb="1" cb="1"/><line nr="206" mi="2" ci="3" mb="1" cb="1"/><line nr="207" mi="2" ci="3" mb="1" cb="1"/><line nr="208" mi="2" ci="3" mb="1" cb="1"/><line nr="209" mi="2" ci="3" mb="1" cb="1"/><line nr="210" mi="2" ci="3" mb="1" cb="1"/><line nr="211" mi="2" ci="3" mb="1" cb="1"/><line nr="212" mi="2" ci="3" mb="1" cb="1"/><line nr="213" mi="2" ci="3" mb="1" cb="1"/><line nr="214" mi="2" ci="3" mb="1" cb="1"/><line nr="215" mi="2" ci="3" mb="1" cb="1"/><line nr="216" mi="2" ci="3" mb="1" cb="1"/><line nr="217" mi="2" ci="3" mb="1" cb="1"/><line nr="218" mi="2" ci="3" mb="1" cb="1"/><line nr="219" mi="2" ci="3" mb="1" cb="1"/><line nr="220" mi="2" ci="3" mb="1" cb="1"/><line nr="221" mi="2" ci="3" mb="1" cb="1"/><line nr="222" mi="2" ci="3" mb="1" cb="1"/><line nr="223" mi="2" ci="3" mb="1" cb="1"/><line nr="224" mi="2" ci="3" mb="1" cb="1"/><line nr="225" mi="2" ci="3" mb="1" cb="1"/><line nr="226" mi="2" ci="3" mb="1" cb="1"/><line nr="227" mi="2" ci="3" mb="1" cb="1"/><line nr="228" mi="2" ci="3" mb="1" cb="1"/><line nr="229" mi="2" ci="3" mb="1" cb="1"/><line nr="230" mi="2" ci="3" mb="1" cb="1"/><line nr="231" mi="2" ci="3" mb="1" cb="1"/><line nr="232" mi="2" ci="3" mb="1" cb="1"/><line nr="233" mi="2" ci="3" mb="1" cb="1"/><line nr="234" mi="2" ci="3" mb="1" cb="1"/><line nr="235" mi="2" ci="3" mb="1" cb="1"/><line nr="236" mi="2" ci="3" mb="1" cb="1"/><line nr="237" mi="2" ci="3" mb="1" cb="1"/><line nr="238" mi="2" ci="3" mb="1" cb="1"/><line nr="239" mi="2" ci="3" mb="1" cb="1"/><line nr="240" mi="2" ci="3" mb="1" cb="1"/><line nr="241" mi="2" ci="3" mb="1" cb="1"/><line nr="242" mi="2" ci="3" mb="1" cb="1"/><line nr="243" mi="2" ci="3" mb="1" cb="1"/><line nr="244" mi="2" ci="3" mb="1" cb="1"/><line nr="245" mi="2" ci="3" mb="1" cb="1"/><line nr="246" mi="2" ci="3" mb="1" cb="1"/><line nr="247" mi="2" ci="3" mb="1" cb="1"/><line nr="248" mi="2" ci="3" mb="1" cb="1"/><line nr="249" mi="2" ci="3" mb="1" cb="1"/><line nr="250" mi="2" ci="3" mb="1" cb="1"/><line nr="251" mi="2" ci="3" mb="1" cb="1"/><line nr="252" mi="2" ci="3" mb="1" cb="1"/><line nr="253" mi="2" ci="3" mb="1" cb="1"/><line nr="254" mi="2" ci="3" mb="1" cb="1"/><line nr="255" mi="2" ci="3" mb="1" cb="1"/><line nr="256" mi="2" ci="3" mb="1" cb="1"/><line nr="257" mi="2" ci="3" mb="1" cb="1"/><line nr="258" mi="2" ci="3" mb="1" cb="1"/><line nr="259" mi="2" ci="3" mb="1" cb="1"/><line nr="260" mi="2" ci="3" mb="1" cb="1"/><line nr="261" mi="2" ci="3" mb="1" cb="1"/><line nr="262" mi="2" ci="3" mb="1" cb="1"/><line nr="263" mi="2" ci="3" mb="1" cb="1"/><line nr="264" mi="2" ci="3" mb="1" cb="1"/><line nr="265" mi="2" ci="3" mb="1" cb="1"/><line nr="266" mi="2" ci="3" mb="1" cb="1"/><line nr="267" mi="2" ci="3" mb="1" cb="1"/><line nr="268" mi="2" ci="3" mb="1" cb="1"/><line nr="269" mi="2" ci="3" mb="1" cb="1"/><line nr="270" mi="2" ci="3" mb="1" cb="1"/><line nr="271" mi="2" ci="3" mb="1" cb="1"/><line nr="272" mi="2" ci="3" mb="1" cb="1"/><line nr="273" mi="2" ci="3" mb="1" cb="1"/><line nr="274" mi="2" ci="3" mb="1" cb="1"/><line nr="275" mi="2" ci="3" mb="1" cb="1"/><line nr="276" mi="2" ci="3" mb="1" cb="1"/><line nr="277" mi="2" ci="3" mb="1" cb="1"/><line nr="278" mi="2" ci="3" mb="1" cb="1"/><line nr="279" mi="2" ci="3" mb="1" cb="1"/><line nr="280" mi="2" ci="3" mb="1" cb="1"/><line nr="281" mi="2" ci="3" mb="1" cb="1"/><line nr="282" mi="2" ci="3" mb="1" cb="1"/><line nr="283" mi="2" ci="3" mb="1" cb="1"/><line nr="284" mi="2" ci="3" mb="1" cb="1"/><line nr="285" mi="2" ci="3" mb="1" cb="1"/><line nr="286" mi="2" ci="3" mb="1" cb="1"/><line nr="287" mi="2" ci="3" mb="1" cb="1"/><line nr="288" mi="2" ci="3" mb="1" cb="1"/><line nr="289" mi="2" ci="3" mb="1" cb="1"/><line nr="290" mi="2" ci="3" mb="1" cb="1"/><line nr="291" mi="2" ci="3" mb="1" cb="1"/><line nr="292" mi="2" ci="3" mb="1" cb="1"/><line nr="293" mi="2" ci="3" mb="1" cb="1"/><line nr="294" mi="2" ci="3" mb="1" cb="1"/><line nr="295" mi="2" ci="3" mb="1" cb="1"/><line nr="296" mi="2" ci="3" mb="1" cb="1"/><line nr="297" mi="2" ci="3" mb="1" cb="1"/><line nr="298" mi="2" ci="3" mb="1" cb="1"/><line nr="299" mi="2" ci="3" mb="1" cb="1"/><line nr="300" mi="2" ci="3" mb="1" cb="1"/><line nr="301" mi="2" ci="3" mb="1" cb="1"/><line nr="302" mi="2" ci="3" mb="1" cb="1"/><line nr="303" mi="2" ci="3" mb="1" cb="1"/><line nr="304" mi="2" ci="3" mb="1" cb="1"/><line nr="305" mi="2" ci="3" mb="1" cb="1"/><line nr="306" mi="2" ci="3" mb="1" cb="1"/><line nr="307" mi="2" ci="3" mb="1" cb="1"/><line nr="308" mi="2" ci="3" mb="1" cb="1"/><line nr="309" mi="2" ci="3" mb="1" cb="1"/><line nr="310" mi="2" ci="3" mb="1" cb="1"/><line nr="311" mi="2" ci="3" mb="1" cb="1"/><line nr="312" mi="2" ci="3" mb="1" cb="1"/><line nr="313" mi="2" ci="3" mb="1" cb="1"/><line nr="314" mi="2" ci="3" mb="1" cb="1"/><line nr="315" mi="2" ci="3" mb="1" cb="1"/><line nr="316" mi="2" ci="3" mb="1" cb="1"/><line nr="317" mi="2" ci="3" mb="1" cb="1"/><line nr="318" mi="2" ci="3" mb="1" cb="1"/><line nr="319" mi="2" ci="3" mb="1" cb="1"/><line nr="320" mi="2" ci="3" mb="1" cb="1"/><line nr="321" mi="2" ci="3" mb="1" cb="1"/><line nr="322" mi="2" ci="3" mb="1" cb="1"/><line nr="323" mi="2" ci="3" mb="1" cb="1"/><line nr="324" mi="2" ci="3" mb="1" cb="1"/><line nr="325" mi="2" ci="3" mb="1" cb="1"/><line nr="326" mi="2" ci="3" mb="1" cb="1"/><line nr="327" mi="2" ci="3" mb="1" cb="1"/><line nr="328" mi="2" ci="3" mb="1" cb="1"/><line nr="329" mi="2" ci="3" mb="1" cb="1"/><line nr="330" mi="2" ci="3" mb="1" cb="1"/><line nr="331" mi="2" ci="3" mb="1" cb="1"/><line nr="332" mi="2" ci="3" mb="1" cb="1"/><line nr="333" mi="2" ci="3" mb="1" cb="1"/><line nr="334" mi="2" ci="3" mb="1" cb="1"/><line nr="335" mi="2" ci="3" mb="1" cb="1"/><line nr="336" mi="2" ci="3" mb="1" cb="1"/><line nr="337" mi="2" ci="3" mb="1" cb="1"/><line nr="338" mi="2" ci="3" mb="1" cb="1"/><line nr="339" mi="2" ci="3" mb="1" cb="1"/><line nr="340" mi="2" ci="3" mb="1" cb="1"/><line nr="341" mi="2" ci="3" mb="1" cb="1"/><line nr="342" mi="2" ci="3" mb="1" cb="1"/><line nr="343" mi="2" ci="3" mb="1" cb="1"/><line nr="344" mi="2" ci="3" mb="1" cb="1"/><line nr="345" mi="2" ci="3" mb="1" cb="1"/><line nr="346" mi="2" ci="3" mb="1" cb="1"/><line nr="347" mi="2" ci="3" mb="1" cb="1"/><line nr="348" mi="2" ci="3" mb="1" cb="1"/><line nr="349" mi="2" ci="3" mb="1" cb="1"/><line nr="350" mi="2" ci="3" mb="1" cb="1"/><line nr="351" mi="2" ci="3" mb="1" cb="1"/><line nr="352" mi="2" ci="3" mb="1" cb="1"/><line nr="353" mi="2" ci="3" mb="1" cb="1"/><line nr="354" mi="2" ci="3" mb="1" cb="1"/><line nr="355" mi="2" ci="3" mb="1" cb="1"/><line nr="356" mi="2" ci="3" mb="1" cb="1"/><line nr="357" mi="2" ci="3" mb="1" cb="1"/><line nr="358" mi="2" ci="3" mb="1" cb="1"/><line nr="359" mi="2" ci="3" mb="1" cb="1"/><line nr="360" mi="2" ci="3" mb="1" cb="1"/><line nr="361" mi="2" ci="3" mb="1" cb="1"/><line nr="362" mi="2" ci="3" mb="1" cb="1"/><line nr="363" mi="2" ci="3" mb="1" cb="1"/><line nr="364" mi="2" ci="3" mb="1" cb="1"/><line nr="365" mi="2" ci="3" mb="1" cb="1"/><line nr="366" mi="2" ci="3" mb="1" cb="1"/><line nr="367" mi="2" ci="3" mb="1" cb="1"/><line nr="368" mi="2" ci="3" mb="1" cb="1"/><line nr="369" mi="2" ci="3" mb="1" cb="1"/><line nr="370" mi="2" ci="3" mb="1" cb="1"/><line nr="371" mi="2" ci="3" mb="1" cb="1"/><line nr="372" mi="2" ci="3" mb="1" cb="1"/><line nr="373" mi="2" ci="3" mb="1" cb="1"/><line nr="374" mi="2" ci="3" mb="1" cb="1"/><line nr="375" mi="2" ci="3" mb="1" cb="1"/><line nr="376" mi="2" ci="3" mb="1" cb="1"/><line nr="377" mi="2" ci="3" mb="1" cb="1"/><line nr="378" mi="2" ci="3" mb="1" cb="1"/><line nr="379" mi="2" ci="3" mb="1" cb="1"/><line nr="380" mi="2" ci="3" mb="1" cb="1"/><line nr="381" mi="2" ci="3" mb="1" cb="1"/><line nr="382" mi="2" ci="3" mb="1" cb="1"/><line nr="383" mi="2" ci="3" mb="1" cb="1"/><line nr="384" mi="2" ci="3" mb="1" cb="1"/><line nr="385" mi="2" ci="3" mb="1" cb="1"/><line nr="386" mi="2" ci="3" mb="1" cb="1"/><line nr="387" mi="2" ci="3" mb="1" cb="1"/><line nr="388" mi="2" ci="3" mb="1" cb="1"/><line nr="389" mi="2" ci="3" mb="1" cb="1"/><line nr="390" mi="2" ci="3" mb="1" cb="1"/><line nr="391" mi="2" ci="3" mb="1" cb="1"/><line nr="392" mi="2" ci="3" mb="1" cb="1"/><line nr="393" mi="2" ci="3" mb="1" cb="1"/><line nr="394" mi="2" ci="3" mb="1" cb="1"/><line nr="395" mi="2" ci="3" mb="1" cb="1"/><line nr="396" mi="2" ci="3" mb="1" cb="1"/><line nr="397" mi="2" ci="3" mb="1" cb="1"/><line nr="398" mi="2" ci="3" mb="1" cb="1"/><line nr="399" mi="2" ci="3" mb="1" cb="1"/><line nr="400" mi="2" ci="3" mb="1" cb="1"/><line nr="401" mi="2" ci="3" mb="1" cb="1"/><line nr="402" mi="2" ci="3" mb="1" cb="1"/><line nr="403" mi="2" ci="3" mb="1" cb="1"/><line nr="404" mi="2" ci="3" mb="1" cb="1"/><line nr="405" mi="2" ci="3" mb="1" cb="1"/><line nr="406" mi="2" ci="3" mb="1" cb="1"/><line nr="407" mi="2" ci="3" mb="1" cb="1"/><line nr="408" mi="2" ci="3" mb="1" cb="1"/><line nr="409" mi="2" ci="3" mb="1" cb="1"/><line nr="410" mi="2" ci="3" mb="1" cb="1"/><line nr="411" mi="2" ci="3" mb="1" cb="1"/><line nr="412" mi="2" ci="3" mb="1" cb="1"/><line nr="413" mi="2" ci="3" mb="1" cb="1"/><line nr="414" mi="2" ci="3" mb="1" cb="1"/><line nr="415" mi="2" ci="3" mb="1" cb="1"/><line nr="416" mi="2" ci="3" mb="1" cb="1"/><line nr="417" mi="2" ci="3" mb="1" cb="1"/><line nr="418" mi="2" ci="3" mb="1" cb="1"/><line nr="419" mi="2" ci="3" mb="1" cb="1"/><line nr="420" mi="2" ci="3" mb="1" cb="1"/><line nr="421" mi="2" ci="3" mb="1" cb="1"/><line nr="422" mi="2" ci="3" mb="1" cb="1"/><line nr="423" mi="2" ci="3" mb="1" cb="1"/><line nr="424" mi="2" ci="3" mb="1" cb="1"/><line nr="425" mi="2" ci="3" mb="1" cb="1"/><line nr="426" mi="2" ci="3" mb="1" cb="1"/><line nr="427" mi="2" ci="3" mb="1" cb="1"/><line nr="428" mi="2" ci="3" mb="1" cb="1"/><line nr="429" mi="2" ci="3" mb="1" cb="1"/><line nr="430" mi="2" ci="3" mb="1" cb="1"/><line nr="431" mi="2" ci="3" mb="1" cb="1"/><line nr="432" mi="2" ci="3" mb="1" cb="1"/><line nr="433" mi="2" ci="3" mb="1" cb="1"/><line nr="434" mi="2" ci="3" mb="1" cb="1"/><line nr="435" mi="2" ci="3" mb="1" cb="1"/><line nr="436" mi="2" ci="3" mb="1" cb="1"/><line nr="437" mi="2" ci="3" mb="1" cb="1"/><line nr="438" mi="2" ci="3" mb="1" cb="1"/><line nr="439" mi="2" ci="3" mb="1" cb="1"/><line nr="440" mi="2" ci="3" mb="1" cb="1"/><line nr="441" mi="2" ci="3" mb="1" cb="1"/><line nr="442" mi="2" ci="3" mb="1" cb="1"/><line nr="443" mi="2" ci="3" mb="1" cb="1"/><line nr="444" mi="2" ci="3" mb="1" cb="1"/><line nr="445" mi="2" ci="3" mb="1" cb="1"/><line nr="446" mi="2" ci="3" mb="1" cb="1"/><line nr="447" mi="2" ci="3" mb="1" cb="1"/><line nr="448" mi="2" ci="3" mb="1" cb="1"/><line nr="449" mi="2" ci="3" mb="1" cb="1"/><line nr="450" mi="2" ci="3" mb="1" cb="1"/><line nr="451" mi="2" ci="3" mb="1" cb="1"/><line nr="452" mi="2" ci="3" mb="1" cb="1"/><line nr="453" mi="2" ci="3" mb="1" cb="1"/><line nr="454" mi="2" ci="3" mb="1" cb="1"/><line nr="455" mi="2" ci="3" mb="1" cb="1"/><line nr="456" mi="2" ci="3" mb="1" cb="1"/><line nr="457" mi="2" ci="3" mb="1" cb="1"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="1" cb="1"/><line nr="475" mi="5" ci="0" mb="2" cb="0"/><line nr="476" mi="5" ci="0" mb="2" cb="0"/><line nr="477" mi="5" ci="0" mb="2" cb="0"/><line nr="478" mi="5" ci="0" mb="2" cb="0"/><line nr="479" mi="5" ci="0" mb="2" cb="0"/><line nr="480" mi="5" ci="0" mb="2" cb="0"/><line nr="481" mi="5" ci="0" mb="2" cb="0"/><line nr="483" mi="5" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="2" cb="0"/><line nr="485" mi="5" ci="0" mb="2" cb="0"/><line nr="486" mi="5" ci="0" mb="2" cb="0"/><line nr="487" mi="5" ci="0" mb="2" cb="0"/><line nr="488" mi="5" ci="0" mb="2" cb="0"/><line nr="489" mi="5" ci="0" mb="2" cb="0"/><line nr="491" mi="5" ci="0" mb="2" cb="0"/><line nr="492" mi="5" ci="0" mb="2" cb="0"/><line nr="493" mi="5" ci="0" mb="2" cb="0"/><line nr="494" mi="5" ci="0" mb="2" cb="0"/><line nr="495" mi="5" ci="0" mb="2" cb="0"/><line nr="496" mi="5" ci="0" mb="2" cb="0"/><line nr="498" mi="5" ci="0" mb="2" cb="0"/><line nr="499" mi="5" ci="0" mb="2" cb="0"/><line nr="500" mi="5" ci="0" mb="2" cb="0"/><line nr="501" mi="5" ci="0" mb="2" cb="0"/><line nr="502" mi="5" ci="0" mb="2" cb="0"/><line nr="503" mi="5" ci="0" mb="2" cb="0"/><line nr="505" mi="5" ci="0" mb="2" cb="0"/><line nr="506" mi="5" ci="0" mb="2" cb="0"/><line nr="507" mi="5" ci="0" mb="2" cb="0"/><line nr="508" mi="5" ci="0" mb="2" cb="0"/><line nr="509" mi="5" ci="0" mb="2" cb="0"/><line nr="510" mi="5" ci="0" mb="2" cb="0"/><line nr="511" mi="5" ci="0" mb="2" cb="0"/><line nr="513" mi="5" ci="0" mb="2" cb="0"/><line nr="514" mi="5" ci="0" mb="2" cb="0"/><line nr="515" mi="5" ci="0" mb="2" cb="0"/><line nr="516" mi="5" ci="0" mb="2" cb="0"/><line nr="517" mi="5" ci="0" mb="2" cb="0"/><line nr="518" mi="5" ci="0" mb="2" cb="0"/><line nr="519" mi="5" ci="0" mb="2" cb="0"/><line nr="521" mi="5" ci="0" mb="2" cb="0"/><line nr="522" mi="5" ci="0" mb="2" cb="0"/><line nr="523" mi="5" ci="0" mb="2" cb="0"/><line nr="524" mi="5" ci="0" mb="2" cb="0"/><line nr="525" mi="5" ci="0" mb="2" cb="0"/><line nr="526" mi="5" ci="0" mb="2" cb="0"/><line nr="527" mi="5" ci="0" mb="2" cb="0"/><line nr="529" mi="5" ci="0" mb="2" cb="0"/><line nr="530" mi="5" ci="0" mb="2" cb="0"/><line nr="531" mi="5" ci="0" mb="2" cb="0"/><line nr="532" mi="5" ci="0" mb="2" cb="0"/><line nr="533" mi="5" ci="0" mb="2" cb="0"/><line nr="534" mi="5" ci="0" mb="2" cb="0"/><line nr="535" mi="5" ci="0" mb="2" cb="0"/><line nr="537" mi="5" ci="0" mb="2" cb="0"/><line nr="538" mi="5" ci="0" mb="2" cb="0"/><line nr="539" mi="5" ci="0" mb="2" cb="0"/><line nr="540" mi="5" ci="0" mb="2" cb="0"/><line nr="541" mi="5" ci="0" mb="2" cb="0"/><line nr="542" mi="5" ci="0" mb="2" cb="0"/><line nr="544" mi="5" ci="0" mb="2" cb="0"/><line nr="545" mi="5" ci="0" mb="2" cb="0"/><line nr="546" mi="5" ci="0" mb="2" cb="0"/><line nr="547" mi="5" ci="0" mb="2" cb="0"/><line nr="548" mi="5" ci="0" mb="2" cb="0"/><line nr="549" mi="5" ci="0" mb="2" cb="0"/><line nr="550" mi="5" ci="0" mb="2" cb="0"/><line nr="552" mi="5" ci="0" mb="2" cb="0"/><line nr="553" mi="5" ci="0" mb="2" cb="0"/><line nr="554" mi="5" ci="0" mb="2" cb="0"/><line nr="555" mi="5" ci="0" mb="2" cb="0"/><line nr="556" mi="5" ci="0" mb="2" cb="0"/><line nr="557" mi="5" ci="0" mb="2" cb="0"/><line nr="559" mi="5" ci="0" mb="2" cb="0"/><line nr="560" mi="5" ci="0" mb="2" cb="0"/><line nr="561" mi="5" ci="0" mb="2" cb="0"/><line nr="562" mi="5" ci="0" mb="2" cb="0"/><line nr="563" mi="5" ci="0" mb="2" cb="0"/><line nr="564" mi="5" ci="0" mb="2" cb="0"/><line nr="565" mi="5" ci="0" mb="2" cb="0"/><line nr="567" mi="5" ci="0" mb="2" cb="0"/><line nr="568" mi="5" ci="0" mb="2" cb="0"/><line nr="569" mi="5" ci="0" mb="2" cb="0"/><line nr="570" mi="5" ci="0" mb="2" cb="0"/><line nr="571" mi="5" ci="0" mb="2" cb="0"/><line nr="572" mi="5" ci="0" mb="2" cb="0"/><line nr="574" mi="5" ci="0" mb="2" cb="0"/><line nr="575" mi="5" ci="0" mb="2" cb="0"/><line nr="576" mi="5" ci="0" mb="2" cb="0"/><line nr="577" mi="5" ci="0" mb="2" cb="0"/><line nr="578" mi="5" ci="0" mb="2" cb="0"/><line nr="579" mi="5" ci="0" mb="2" cb="0"/><line nr="580" mi="5" ci="0" mb="2" cb="0"/><line nr="582" mi="5" ci="0" mb="2" cb="0"/><line nr="583" mi="5" ci="0" mb="2" cb="0"/><line nr="584" mi="5" ci="0" mb="2" cb="0"/><line nr="585" mi="5" ci="0" mb="2" cb="0"/><line nr="586" mi="5" ci="0" mb="2" cb="0"/><line nr="587" mi="5" ci="0" mb="2" cb="0"/><line nr="589" mi="5" ci="0" mb="2" cb="0"/><line nr="590" mi="5" ci="0" mb="2" cb="0"/><line nr="591" mi="5" ci="0" mb="2" cb="0"/><line nr="592" mi="5" ci="0" mb="2" cb="0"/><line nr="593" mi="5" ci="0" mb="2" cb="0"/><line nr="594" mi="5" ci="0" mb="2" cb="0"/><line nr="596" mi="5" ci="0" mb="2" cb="0"/><line nr="597" mi="5" ci="0" mb="2" cb="0"/><line nr="598" mi="5" ci="0" mb="2" cb="0"/><line nr="599" mi="5" ci="0" mb="2" cb="0"/><line nr="600" mi="5" ci="0" mb="2" cb="0"/><line nr="601" mi="5" ci="0" mb="2" cb="0"/><line nr="603" mi="5" ci="0" mb="2" cb="0"/><line nr="604" mi="5" ci="0" mb="2" cb="0"/><line nr="605" mi="5" ci="0" mb="2" cb="0"/><line nr="606" mi="5" ci="0" mb="2" cb="0"/><line nr="607" mi="5" ci="0" mb="2" cb="0"/><line nr="608" mi="5" ci="0" mb="2" cb="0"/><line nr="610" mi="5" ci="0" mb="2" cb="0"/><line nr="611" mi="5" ci="0" mb="2" cb="0"/><line nr="612" mi="5" ci="0" mb="2" cb="0"/><line nr="613" mi="5" ci="0" mb="2" cb="0"/><line nr="614" mi="5" ci="0" mb="2" cb="0"/><line nr="615" mi="5" ci="0" mb="2" cb="0"/><line nr="617" mi="5" ci="0" mb="2" cb="0"/><line nr="618" mi="5" ci="0" mb="2" cb="0"/><line nr="619" mi="5" ci="0" mb="2" cb="0"/><line nr="620" mi="5" ci="0" mb="2" cb="0"/><line nr="621" mi="5" ci="0" mb="2" cb="0"/><line nr="622" mi="5" ci="0" mb="2" cb="0"/><line nr="623" mi="5" ci="0" mb="2" cb="0"/><line nr="625" mi="5" ci="0" mb="2" cb="0"/><line nr="626" mi="5" ci="0" mb="2" cb="0"/><line nr="627" mi="5" ci="0" mb="2" cb="0"/><line nr="628" mi="5" ci="0" mb="2" cb="0"/><line nr="629" mi="5" ci="0" mb="2" cb="0"/><line nr="630" mi="5" ci="0" mb="2" cb="0"/><line nr="631" mi="5" ci="0" mb="2" cb="0"/><line nr="633" mi="5" ci="0" mb="2" cb="0"/><line nr="634" mi="5" ci="0" mb="2" cb="0"/><line nr="635" mi="5" ci="0" mb="2" cb="0"/><line nr="636" mi="5" ci="0" mb="2" cb="0"/><line nr="637" mi="5" ci="0" mb="2" cb="0"/><line nr="638" mi="5" ci="0" mb="2" cb="0"/><line nr="640" mi="5" ci="0" mb="2" cb="0"/><line nr="641" mi="5" ci="0" mb="2" cb="0"/><line nr="642" mi="5" ci="0" mb="2" cb="0"/><line nr="643" mi="5" ci="0" mb="2" cb="0"/><line nr="644" mi="5" ci="0" mb="2" cb="0"/><line nr="645" mi="5" ci="0" mb="2" cb="0"/><line nr="646" mi="5" ci="0" mb="2" cb="0"/><line nr="648" mi="5" ci="0" mb="2" cb="0"/><line nr="649" mi="5" ci="0" mb="2" cb="0"/><line nr="650" mi="5" ci="0" mb="2" cb="0"/><line nr="651" mi="5" ci="0" mb="2" cb="0"/><line nr="652" mi="5" ci="0" mb="2" cb="0"/><line nr="653" mi="5" ci="0" mb="2" cb="0"/><line nr="655" mi="5" ci="0" mb="2" cb="0"/><line nr="656" mi="5" ci="0" mb="2" cb="0"/><line nr="657" mi="5" ci="0" mb="2" cb="0"/><line nr="658" mi="5" ci="0" mb="2" cb="0"/><line nr="660" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="0" ci="5" mb="1" cb="1"/><line nr="677" mi="5" ci="0" mb="2" cb="0"/><line nr="678" mi="5" ci="0" mb="2" cb="0"/><line nr="679" mi="5" ci="0" mb="2" cb="0"/><line nr="680" mi="5" ci="0" mb="2" cb="0"/><line nr="681" mi="5" ci="0" mb="2" cb="0"/><line nr="682" mi="5" ci="0" mb="2" cb="0"/><line nr="683" mi="5" ci="0" mb="2" cb="0"/><line nr="684" mi="5" ci="0" mb="2" cb="0"/><line nr="686" mi="5" ci="0" mb="2" cb="0"/><line nr="687" mi="5" ci="0" mb="2" cb="0"/><line nr="688" mi="5" ci="0" mb="2" cb="0"/><line nr="689" mi="5" ci="0" mb="2" cb="0"/><line nr="690" mi="5" ci="0" mb="2" cb="0"/><line nr="691" mi="5" ci="0" mb="2" cb="0"/><line nr="693" mi="2" ci="0" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="2"/><line nr="707" mi="0" ci="5" mb="0" cb="2"/><line nr="708" mi="0" ci="5" mb="1" cb="1"/><line nr="709" mi="5" ci="0" mb="2" cb="0"/><line nr="710" mi="5" ci="0" mb="2" cb="0"/><line nr="711" mi="5" ci="0" mb="2" cb="0"/><line nr="712" mi="5" ci="0" mb="2" cb="0"/><line nr="713" mi="5" ci="0" mb="2" cb="0"/><line nr="715" mi="5" ci="0" mb="2" cb="0"/><line nr="716" mi="5" ci="0" mb="2" cb="0"/><line nr="717" mi="5" ci="0" mb="2" cb="0"/><line nr="718" mi="5" ci="0" mb="2" cb="0"/><line nr="719" mi="5" ci="0" mb="2" cb="0"/><line nr="720" mi="5" ci="0" mb="2" cb="0"/><line nr="722" mi="5" ci="0" mb="2" cb="0"/><line nr="723" mi="5" ci="0" mb="2" cb="0"/><line nr="724" mi="5" ci="0" mb="2" cb="0"/><line nr="725" mi="5" ci="0" mb="2" cb="0"/><line nr="726" mi="5" ci="0" mb="2" cb="0"/><line nr="727" mi="5" ci="0" mb="2" cb="0"/><line nr="729" mi="5" ci="0" mb="2" cb="0"/><line nr="730" mi="5" ci="0" mb="2" cb="0"/><line nr="731" mi="5" ci="0" mb="2" cb="0"/><line nr="732" mi="5" ci="0" mb="2" cb="0"/><line nr="733" mi="5" ci="0" mb="2" cb="0"/><line nr="734" mi="5" ci="0" mb="2" cb="0"/><line nr="736" mi="5" ci="0" mb="2" cb="0"/><line nr="737" mi="5" ci="0" mb="2" cb="0"/><line nr="738" mi="5" ci="0" mb="2" cb="0"/><line nr="739" mi="5" ci="0" mb="2" cb="0"/><line nr="741" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1718" covered="1143"/><counter type="BRANCH" missed="759" covered="385"/><counter type="LINE" missed="205" covered="365"/><counter type="COMPLEXITY" missed="559" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathLexer.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="21"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="2"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="2"/><line nr="225" mi="0" ci="12" mb="0" cb="0"/><line nr="230" mi="0" ci="11" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="5" mb="0" cb="2"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="10" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="5"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="15" mb="3" cb="3"/><line nr="355" mi="0" ci="13" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="15" mb="3" cb="3"/><line nr="377" mi="0" ci="13" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="15" mb="3" cb="3"/><line nr="399" mi="0" ci="13" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="10" mb="2" cb="2"/><line nr="419" mi="0" ci="13" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="3"/><line nr="439" mi="0" ci="2" mb="1" cb="1"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="10" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="2"/><line nr="474" mi="0" ci="4" mb="0" cb="2"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="9" mb="0" cb="0"/><line nr="496" mi="0" ci="13" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="13" mb="0" cb="0"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="13" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="13" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="538" mi="0" ci="13" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="13" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="13" mb="0" cb="0"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="13" mb="0" cb="0"/><line nr="574" mi="0" ci="2" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="580" mi="0" ci="13" mb="0" cb="0"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="13" mb="0" cb="0"/><line nr="597" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="1" cb="2"/><line nr="608" mi="0" ci="5" mb="0" cb="2"/><line nr="609" mi="0" ci="13" mb="0" cb="0"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="615" mi="0" ci="13" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="2"/><line nr="626" mi="0" ci="13" mb="0" cb="0"/><line nr="630" mi="0" ci="3" mb="0" cb="0"/><line nr="632" mi="0" ci="13" mb="0" cb="0"/><line nr="638" mi="0" ci="2" mb="0" cb="0"/><line nr="643" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="7" mb="0" cb="2"/><line nr="650" mi="0" ci="13" mb="0" cb="0"/><line nr="655" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="667" mi="0" ci="3" mb="0" cb="0"/><line nr="669" mi="0" ci="5" mb="0" cb="4"/><line nr="672" mi="0" ci="5" mb="0" cb="2"/><line nr="673" mi="0" ci="10" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="2"/><line nr="689" mi="0" ci="13" mb="0" cb="0"/><line nr="693" mi="0" ci="2" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="13" mb="0" cb="0"/><line nr="702" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="0" ci="2" mb="0" cb="0"/><line nr="711" mi="0" ci="13" mb="0" cb="0"/><line nr="716" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="2" mb="0" cb="0"/><line nr="722" mi="0" ci="13" mb="0" cb="0"/><line nr="727" mi="0" ci="2" mb="0" cb="0"/><line nr="729" mi="0" ci="2" mb="0" cb="0"/><line nr="733" mi="0" ci="13" mb="0" cb="0"/><line nr="738" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="0" ci="2" mb="0" cb="0"/><line nr="744" mi="0" ci="13" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="751" mi="0" ci="2" mb="0" cb="0"/><line nr="755" mi="0" ci="2" mb="0" cb="0"/><line nr="757" mi="0" ci="4" mb="0" cb="2"/><line nr="759" mi="0" ci="13" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="764" mi="0" ci="2" mb="0" cb="0"/><line nr="765" mi="0" ci="1" mb="0" cb="0"/><line nr="768" mi="0" ci="13" mb="0" cb="0"/><line nr="772" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="780" mi="0" ci="9" mb="0" cb="2"/><line nr="781" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="10" mb="0" cb="0"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="1" mb="0" cb="0"/><line nr="792" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="949"/><counter type="BRANCH" missed="13" covered="89"/><counter type="LINE" missed="0" covered="230"/><counter type="COMPLEXITY" missed="13" covered="85"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathReader.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="2"/><line nr="95" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="6"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="1" cb="3"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="1" cb="3"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="21" mb="0" cb="8"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="1" cb="3"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="16" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="2"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="2"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="1" cb="5"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="1" cb="2"/><line nr="274" mi="0" ci="2" mb="0" cb="2"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="16" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="1" cb="2"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="2"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="2"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="1" cb="2"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="1" cb="2"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="10" mb="0" cb="4"/><line nr="388" mi="0" ci="4" mb="1" cb="2"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="2"/><line nr="411" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="1" cb="4"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="0" cb="2"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="456" mi="0" ci="4" mb="1" cb="2"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="2" mb="0" cb="2"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="3"/><line nr="484" mi="0" ci="4" mb="0" cb="2"/><line nr="486" mi="0" ci="3" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="2"/><line nr="513" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="2"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="2"/><line nr="528" mi="0" ci="4" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="2"/><line nr="536" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="4" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="2"/><line nr="563" mi="0" ci="4" mb="0" cb="2"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="1" cb="2"/><line nr="576" mi="0" ci="5" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="2"/><line nr="587" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="6" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="1" cb="2"/><line nr="602" mi="0" ci="4" mb="0" cb="0"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="606" mi="0" ci="1" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="611" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="1" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="2"/><line nr="621" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="4" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="642" mi="0" ci="1" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="1" mb="0" cb="0"/><line nr="649" mi="0" ci="3" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="655" mi="0" ci="4" mb="0" cb="2"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="4" mb="0" cb="0"/><line nr="659" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="670" mi="0" ci="2" mb="0" cb="0"/><line nr="672" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="4" mb="0" cb="2"/><line nr="676" mi="0" ci="2" mb="0" cb="0"/><line nr="677" mi="0" ci="4" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="1" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="6" mb="0" cb="4"/><line nr="691" mi="0" ci="2" mb="1" cb="2"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="0" ci="2" mb="0" cb="0"/><line nr="696" mi="0" ci="4" mb="0" cb="0"/><line nr="697" mi="0" ci="1" mb="0" cb="0"/><line nr="700" mi="0" ci="4" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="0"/><line nr="702" mi="0" ci="2" mb="0" cb="0"/><line nr="703" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="5" mb="0" cb="0"/><line nr="709" mi="0" ci="1" mb="0" cb="0"/><line nr="713" mi="0" ci="2" mb="0" cb="0"/><line nr="715" mi="0" ci="4" mb="0" cb="0"/><line nr="720" mi="0" ci="12" mb="0" cb="8"/><line nr="724" mi="0" ci="2" mb="1" cb="4"/><line nr="726" mi="0" ci="4" mb="0" cb="0"/><line nr="727" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="0" ci="2" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="730" mi="0" ci="1" mb="0" cb="0"/><line nr="733" mi="0" ci="4" mb="0" cb="0"/><line nr="734" mi="0" ci="3" mb="0" cb="0"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="736" mi="0" ci="4" mb="0" cb="0"/><line nr="737" mi="0" ci="1" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="0"/><line nr="741" mi="0" ci="3" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="4" mb="0" cb="0"/><line nr="744" mi="0" ci="1" mb="0" cb="0"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="750" mi="0" ci="4" mb="0" cb="0"/><line nr="754" mi="0" ci="5" mb="0" cb="0"/><line nr="756" mi="0" ci="1" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="762" mi="0" ci="4" mb="0" cb="0"/><line nr="763" mi="0" ci="6" mb="0" cb="4"/><line nr="764" mi="0" ci="2" mb="1" cb="2"/><line nr="766" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="0" ci="3" mb="0" cb="0"/><line nr="768" mi="0" ci="2" mb="0" cb="0"/><line nr="769" mi="0" ci="4" mb="0" cb="0"/><line nr="770" mi="0" ci="1" mb="0" cb="0"/><line nr="773" mi="0" ci="4" mb="0" cb="0"/><line nr="774" mi="0" ci="3" mb="0" cb="0"/><line nr="775" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="4" mb="0" cb="0"/><line nr="780" mi="0" ci="5" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="785" mi="0" ci="2" mb="0" cb="0"/><line nr="787" mi="0" ci="4" mb="0" cb="0"/><line nr="788" mi="0" ci="9" mb="0" cb="6"/><line nr="789" mi="0" ci="2" mb="1" cb="3"/><line nr="792" mi="0" ci="4" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="0" cb="0"/><line nr="794" mi="0" ci="2" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="1" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="0"/><line nr="800" mi="0" ci="3" mb="0" cb="0"/><line nr="801" mi="0" ci="2" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="0" ci="1" mb="0" cb="0"/><line nr="806" mi="0" ci="4" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="0" cb="0"/><line nr="808" mi="0" ci="2" mb="0" cb="0"/><line nr="809" mi="0" ci="4" mb="0" cb="0"/><line nr="813" mi="0" ci="5" mb="0" cb="0"/><line nr="816" mi="0" ci="1" mb="0" cb="0"/><line nr="819" mi="0" ci="4" mb="0" cb="2"/><line nr="821" mi="0" ci="3" mb="0" cb="0"/><line nr="822" mi="0" ci="4" mb="0" cb="0"/><line nr="823" mi="0" ci="2" mb="0" cb="0"/><line nr="824" mi="0" ci="4" mb="0" cb="0"/><line nr="825" mi="0" ci="1" mb="0" cb="0"/><line nr="828" mi="0" ci="2" mb="0" cb="0"/><line nr="834" mi="0" ci="1" mb="0" cb="0"/><line nr="837" mi="0" ci="3" mb="0" cb="0"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="841" mi="0" ci="2" mb="0" cb="0"/><line nr="843" mi="0" ci="4" mb="0" cb="2"/><line nr="845" mi="0" ci="4" mb="0" cb="0"/><line nr="846" mi="0" ci="2" mb="0" cb="0"/><line nr="847" mi="0" ci="2" mb="0" cb="0"/><line nr="852" mi="0" ci="4" mb="0" cb="0"/><line nr="853" mi="0" ci="1" mb="0" cb="0"/><line nr="856" mi="0" ci="4" mb="0" cb="0"/><line nr="858" mi="0" ci="6" mb="0" cb="0"/><line nr="860" mi="0" ci="4" mb="0" cb="2"/><line nr="861" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="0"/><line nr="866" mi="0" ci="12" mb="0" cb="0"/><line nr="867" mi="0" ci="2" mb="0" cb="0"/><line nr="871" mi="0" ci="5" mb="0" cb="0"/><line nr="877" mi="0" ci="7" mb="0" cb="2"/><line nr="878" mi="0" ci="7" mb="0" cb="2"/><line nr="879" mi="0" ci="7" mb="0" cb="0"/><line nr="883" mi="0" ci="8" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="889" mi="0" ci="16" mb="0" cb="8"/><line nr="896" mi="0" ci="2" mb="0" cb="0"/><line nr="899" mi="0" ci="2" mb="0" cb="0"/><line nr="903" mi="0" ci="4" mb="0" cb="0"/><line nr="904" mi="0" ci="5" mb="0" cb="0"/><line nr="906" mi="0" ci="7" mb="0" cb="0"/><line nr="912" mi="0" ci="4" mb="0" cb="0"/><line nr="913" mi="0" ci="5" mb="0" cb="0"/><line nr="915" mi="0" ci="11" mb="0" cb="0"/><line nr="917" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="1252"/><counter type="BRANCH" missed="17" covered="152"/><counter type="LINE" missed="7" covered="380"/><counter type="COMPLEXITY" missed="17" covered="121"/><counter type="METHOD" missed="0" covered="40"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenTypes.java"><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="34" cb="2"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="6"/><counter type="BRANCH" missed="34" covered="2"/><counter type="LINE" missed="35" covered="3"/><counter type="COMPLEXITY" missed="35" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1847" covered="3398"/><counter type="BRANCH" missed="823" covered="628"/><counter type="LINE" missed="248" covered="996"/><counter type="COMPLEXITY" missed="625" covered="237"/><counter type="METHOD" missed="3" covered="91"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/jaxen/expr/iter"><class name="org/jaxen/expr/iter/IterableNamespaceAxis" sourcefilename="IterableNamespaceAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableAttributeAxis" sourcefilename="IterableAttributeAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedAccessIterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="95"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsNamedAccess" desc="(Lorg/jaxen/ContextSupport;)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableDescendantOrSelfAxis" sourcefilename="IterableDescendantOrSelfAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableAxis" sourcefilename="IterableAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()I" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedAccessIterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsNamedAccess" desc="(Lorg/jaxen/ContextSupport;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterablePrecedingAxis" sourcefilename="IterablePrecedingAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableAncestorAxis" sourcefilename="IterableAncestorAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableFollowingAxis" sourcefilename="IterableFollowingAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableFollowingSiblingAxis" sourcefilename="IterableFollowingSiblingAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableParentAxis" sourcefilename="IterableParentAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableSelfAxis" sourcefilename="IterableSelfAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterablePrecedingSiblingAxis" sourcefilename="IterablePrecedingSiblingAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableAncestorOrSelfAxis" sourcefilename="IterableAncestorOrSelfAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableDescendantAxis" sourcefilename="IterableDescendantAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/iter/IterableChildAxis" sourcefilename="IterableChildAxis.java"><method name="&lt;init&gt;" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedAccessIterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="97"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsNamedAccess" desc="(Lorg/jaxen/ContextSupport;)Z" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IterableFollowingSiblingAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableNamespaceAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAncestorOrSelfAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterablePrecedingAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableParentAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableFollowingAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableDescendantAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAttributeAxis.java"><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAxis.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableDescendantOrSelfAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterablePrecedingSiblingAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAncestorAxis.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableSelfAxis.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableChildAxis.java"><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="163"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="34"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="14"/></package><package name="org/jaxen/jdom"><class name="org/jaxen/jdom/JDOMXPath" sourcefilename="JDOMXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/jdom/DocumentNavigator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/jaxen/Navigator;" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElement" desc="(Ljava/lang/Object;)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="(Ljava/lang/Object;)Z" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isText" desc="(Ljava/lang/Object;)Z" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAttribute" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProcessingInstruction" desc="(Ljava/lang/Object;)Z" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDocument" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNamespace" desc="(Ljava/lang/Object;)Z" line="111"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="147"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="169"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="199"><counter type="INSTRUCTION" missed="20" covered="102"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="254"><counter type="INSTRUCTION" missed="47" covered="26"/><counter type="BRANCH" missed="15" covered="5"/><counter type="LINE" missed="13" covered="8"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="286"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="308"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseXPath" desc="(Ljava/lang/String;)Lorg/jaxen/XPath;" line="325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="329"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="339"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="351"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="363"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespacePrefix" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTextStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="388"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="400"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="406"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="430"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="436"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommentStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="442"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="448"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="475"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="472" covered="198"/><counter type="BRANCH" missed="97" covered="27"/><counter type="LINE" missed="126" covered="55"/><counter type="COMPLEXITY" missed="78" covered="17"/><counter type="METHOD" missed="21" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/jdom/DocumentNavigator$Singleton" sourcefilename="DocumentNavigator.java"><method name="&lt;clinit&gt;" desc="()V" line="490"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/jdom/XPathNamespace" sourcefilename="XPathNamespace.java"><method name="&lt;init&gt;" desc="(Lorg/jdom/Namespace;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/jdom/Element;Lorg/jdom/Namespace;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJDOMElement" desc="()Lorg/jdom/Element;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJDOMElement" desc="(Lorg/jdom/Element;)V" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJDOMNamespace" desc="()Lorg/jdom/Namespace;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="15"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XPathNamespace.java"><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="25" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="15"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DocumentNavigator.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="4" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="9" mb="2" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="2" cb="2"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="4" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="2" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="2" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="2" cb="0"/><line nr="185" mi="7" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="1" cb="1"/><line nr="214" mi="0" ci="5" mb="1" cb="1"/><line nr="215" mi="0" ci="10" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="2" cb="0"/><line nr="224" mi="11" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="1" cb="1"/><line nr="236" mi="0" ci="5" mb="1" cb="1"/><line nr="237" mi="0" ci="10" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="2"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="1" cb="1"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="1" cb="1"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="2" cb="0"/><line nr="262" mi="4" ci="0" mb="2" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="1" cb="1"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="1" cb="1"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="2" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="2" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="2" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="1" cb="1"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="2" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="2" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="2" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="2" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="1" cb="1"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="4" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="12" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="6" ci="0" mb="4" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="12" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="1" cb="1"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="2" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="2" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="2" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="2" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="2" cb="0"/><line nr="420" mi="7" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="2" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="3" ci="0" mb="2" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="2" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="3" ci="0" mb="2" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="3" ci="0" mb="2" cb="0"/><line nr="458" mi="6" ci="0" mb="0" cb="0"/><line nr="459" mi="3" ci="0" mb="2" cb="0"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="2" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="2" cb="0"/><line nr="467" mi="3" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="0" cb="0"/><line nr="475" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="6" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="472" covered="203"/><counter type="BRANCH" missed="97" covered="27"/><counter type="LINE" missed="126" covered="56"/><counter type="COMPLEXITY" missed="78" covered="18"/><counter type="METHOD" missed="21" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JDOMXPath.java"><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="507" covered="223"/><counter type="BRANCH" missed="97" covered="27"/><counter type="LINE" missed="132" covered="64"/><counter type="COMPLEXITY" missed="81" covered="22"/><counter type="METHOD" missed="24" covered="17"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/jaxen/saxpath/helpers"><class name="org/jaxen/saxpath/helpers/XPathReaderFactory" sourcefilename="XPathReaderFactory.java"><method name="createReader" desc="()Lorg/jaxen/saxpath/XPathReader;" line="94"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createReader" desc="(Ljava/lang/String;)Lorg/jaxen/saxpath/XPathReader;" line="124"><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/helpers/DefaultXPathHandler" sourcefilename="DefaultXPathHandler.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startXPath" desc="()V" line="73"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endXPath" desc="()V" line="76"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startPathExpr" desc="()V" line="79"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endPathExpr" desc="()V" line="82"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAbsoluteLocationPath" desc="()V" line="85"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endAbsoluteLocationPath" desc="()V" line="88"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startRelativeLocationPath" desc="()V" line="91"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endRelativeLocationPath" desc="()V" line="94"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startNameStep" desc="(ILjava/lang/String;Ljava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endNameStep" desc="()V" line="102"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startTextNodeStep" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endTextNodeStep" desc="()V" line="108"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startCommentNodeStep" desc="(I)V" line="111"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endCommentNodeStep" desc="()V" line="114"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAllNodeStep" desc="(I)V" line="117"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endAllNodeStep" desc="()V" line="120"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProcessingInstructionNodeStep" desc="(ILjava/lang/String;)V" line="124"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endProcessingInstructionNodeStep" desc="()V" line="127"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startPredicate" desc="()V" line="130"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endPredicate" desc="()V" line="133"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startFilterExpr" desc="()V" line="136"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFilterExpr" desc="()V" line="139"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startOrExpr" desc="()V" line="142"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOrExpr" desc="(Z)V" line="145"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAndExpr" desc="()V" line="148"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endAndExpr" desc="(Z)V" line="151"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startEqualityExpr" desc="()V" line="154"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endEqualityExpr" desc="(I)V" line="157"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startRelationalExpr" desc="()V" line="160"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endRelationalExpr" desc="(I)V" line="163"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAdditiveExpr" desc="()V" line="166"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endAdditiveExpr" desc="(I)V" line="169"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startMultiplicativeExpr" desc="()V" line="172"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endMultiplicativeExpr" desc="(I)V" line="175"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startUnaryExpr" desc="()V" line="178"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endUnaryExpr" desc="(I)V" line="181"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startUnionExpr" desc="()V" line="184"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endUnionExpr" desc="(Z)V" line="187"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="(I)V" line="190"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="(D)V" line="193"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literal" desc="(Ljava/lang/String;)V" line="196"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableReference" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="200"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startFunction" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="204"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFunction" desc="()V" line="207"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="3"/><counter type="LINE" missed="44" covered="1"/><counter type="COMPLEXITY" missed="44" covered="1"/><counter type="METHOD" missed="44" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XPathReaderFactory.java"><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="4"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="14" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultXPathHandler.java"><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="3"/><counter type="LINE" missed="44" covered="1"/><counter type="COMPLEXITY" missed="44" covered="1"/><counter type="METHOD" missed="44" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="57" covered="61"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="49" covered="18"/><counter type="COMPLEXITY" missed="44" covered="6"/><counter type="METHOD" missed="44" covered="3"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/jaxen/javabean"><class name="org/jaxen/javabean/ElementIterator" sourcefilename="ElementIterator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/javabean/Element;Ljava/lang/String;Ljava/util/Iterator;)V" line="15"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/javabean/DocumentNavigator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/jaxen/Navigator;" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isElement" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComment" desc="(Ljava/lang/Object;)Z" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isText" desc="(Ljava/lang/Object;)Z" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAttribute" desc="(Ljava/lang/Object;)Z" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isProcessingInstruction" desc="(Ljava/lang/Object;)Z" line="110"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDocument" desc="(Ljava/lang/Object;)Z" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNamespace" desc="(Ljava/lang/Object;)Z" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="173"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="242"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="252"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="274"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="279"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="294"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="303"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="312"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="317"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespacePrefix" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="322"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommentStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="327"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="332"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeType" desc="(Ljava/lang/Object;)S" line="337"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="342"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="347"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseXPath" desc="(Ljava/lang/String;)Lorg/jaxen/XPath;" line="358"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="javacase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="363"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="77" covered="0"/><counter type="COMPLEXITY" missed="47" covered="0"/><counter type="METHOD" missed="37" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/javabean/JavaBeanXPath" sourcefilename="JavaBeanXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="(Ljava/lang/Object;)Lorg/jaxen/Context;" line="99"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="128"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/javabean/Element" sourcefilename="Element.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/javabean/Element;Ljava/lang/String;Ljava/lang/Object;)V" line="12"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lorg/jaxen/javabean/Element;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="()Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JavaBeanXPath.java"><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="11" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ElementIterator.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="11" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Element.java"><line nr="12" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DocumentNavigator.java"><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="12" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="14" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="7" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="218" mi="10" ci="0" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="2" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="11" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="2" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="2" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="2" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="4" ci="0" mb="2" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="372" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="77" covered="0"/><counter type="COMPLEXITY" missed="47" covered="0"/><counter type="METHOD" missed="37" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="406" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="120" covered="0"/><counter type="COMPLEXITY" missed="66" covered="0"/><counter type="METHOD" missed="48" covered="0"/><counter type="CLASS" missed="4" covered="0"/></package><package name="org/jaxen/function"><class name="org/jaxen/function/StringFunction" sourcefilename="StringFunction.java"><method name="&lt;init&gt;" desc="()V" line="200"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="217"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="253"><counter type="INSTRUCTION" missed="8" covered="122"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="4" covered="34"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringValue" desc="(D)Ljava/lang/String;" line="339"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringValue" desc="(Z)Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="186"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="203"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="4" covered="56"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/StringLengthFunction" sourcefilename="StringLengthFunction.java"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="131"><counter type="INSTRUCTION" missed="13" covered="60"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="88"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/LastFunction" sourcefilename="LastFunction.java"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Double;" line="111"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/FloorFunction" sourcefilename="FloorFunction.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="123"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/LangFunction" sourcefilename="LangFunction.java"><method name="&lt;init&gt;" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="149"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/String;Lorg/jaxen/Navigator;)Z" line="158"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSublang" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="116"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/SumFunction" sourcefilename="SumFunction.java"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="117"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/NameFunction" sourcefilename="NameFunction.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/SubstringAfterFunction" sourcefilename="SubstringAfterFunction.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ConcatFunction" sourcefilename="ConcatFunction.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/IdFunction" sourcefilename="IdFunction.java"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/util/List;" line="131"><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="86"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/NormalizeSpaceFunction" sourcefilename="NormalizeSpaceFunction.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isXMLSpace" desc="(C)Z" line="171"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/LocalNameFunction" sourcefilename="LocalNameFunction.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/NamespaceUriFunction" sourcefilename="NamespaceUriFunction.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/TrueFunction" sourcefilename="TrueFunction.java"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="()Ljava/lang/Boolean;" line="102"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/SubstringFunction" sourcefilename="SubstringFunction.java"><method name="&lt;init&gt;" desc="()V" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="2" covered="124"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unicodeSubstring" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="236"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="170"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/SubstringBeforeFunction" sourcefilename="SubstringBeforeFunction.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/StartsWithFunction" sourcefilename="StartsWithFunction.java"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="124"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/CountFunction" sourcefilename="CountFunction.java"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="108"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/FalseFunction" sourcefilename="FalseFunction.java"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="()Ljava/lang/Boolean;" line="102"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/NotFunction" sourcefilename="NotFunction.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ContainsFunction" sourcefilename="ContainsFunction.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="125"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/RoundFunction" sourcefilename="RoundFunction.java"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="122"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/CeilingFunction" sourcefilename="CeilingFunction.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="125"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/PositionFunction" sourcefilename="PositionFunction.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Double;" line="112"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/BooleanFunction" sourcefilename="BooleanFunction.java"><method name="&lt;init&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="152"><counter type="INSTRUCTION" missed="1" covered="55"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="74"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/NumberFunction" sourcefilename="NumberFunction.java"><method name="&lt;init&gt;" desc="()V" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Double;" line="177"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="(D)Z" line="227"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNaN" desc="(Ljava/lang/Double;)Z" line="239"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/TranslateFunction" sourcefilename="TranslateFunction.java"><method name="&lt;init&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUnicodeCharacters" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="6" covered="76"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHighSurrogate" desc="(C)Z" line="246"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLowSurrogate" desc="(C)Z" line="250"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="227"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IdFunction.java"><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="2" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="86"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PositionFunction.java"><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringFunction.java"><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="2"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="4"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="2"/><line nr="272" mi="0" ci="4" mb="0" cb="2"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="2"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="1" cb="1"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="1" cb="1"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="2"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="2"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="2"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="2"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="2"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="203"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="4" covered="56"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalNameFunction.java"><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrueFunction.java"><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstringFunction.java"><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="4"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="2" mb="0" cb="2"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="10" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="2"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="9" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="170"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CountFunction.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TranslateFunction.java"><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="13" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="2"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="14" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="10" mb="0" cb="4"/><line nr="250" mi="0" ci="10" mb="1" cb="3"/><counter type="INSTRUCTION" missed="6" covered="227"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotFunction.java"><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LangFunction.java"><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="4"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="12" mb="2" cb="2"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="20" mb="0" cb="6"/><counter type="INSTRUCTION" missed="8" covered="116"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstringBeforeFunction.java"><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SumFunction.java"><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameFunction.java"><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RoundFunction.java"><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="4"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StartsWithFunction.java"><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstringAfterFunction.java"><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContainsFunction.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FloorFunction.java"><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NormalizeSpaceFunction.java"><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="2"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="10" mb="0" cb="4"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="16" mb="1" cb="7"/><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FalseFunction.java"><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConcatFunction.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanFunction.java"><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="4"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="2"/><line nr="195" mi="1" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="1" covered="74"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumberFunction.java"><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="1" cb="3"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="28" mb="2" cb="12"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringLengthFunction.java"><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="4"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="1" cb="3"/><line nr="144" mi="0" ci="12" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="88"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NamespaceUriFunction.java"><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LastFunction.java"><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CeilingFunction.java"><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="40" covered="1983"/><counter type="BRANCH" missed="13" covered="337"/><counter type="LINE" missed="12" covered="469"/><counter type="COMPLEXITY" missed="13" covered="255"/><counter type="METHOD" missed="0" covered="93"/><counter type="CLASS" missed="0" covered="27"/></package><package name="org/jaxen/function/ext"><class name="org/jaxen/function/ext/EvaluateFunction" sourcefilename="EvaluateFunction.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;Ljava/lang/Object;)Ljava/util/List;" line="81"><counter type="INSTRUCTION" missed="9" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="57"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ext/UpperFunction" sourcefilename="UpperFunction.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/util/Locale;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ext/LowerFunction" sourcefilename="LowerFunction.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/util/Locale;Lorg/jaxen/Navigator;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ext/LocaleFunctionSupport" sourcefilename="LocaleFunctionSupport.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocale" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/util/Locale;" line="84"><counter type="INSTRUCTION" missed="19" covered="19"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLocale" desc="(Ljava/lang/String;)Ljava/util/Locale;" line="116"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLocaleForLanguage" desc="(Ljava/lang/String;)Ljava/util/Locale;" line="150"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="102"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="8" covered="25"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/function/ext/EndsWithFunction" sourcefilename="EndsWithFunction.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UpperFunction.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LowerFunction.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="1" cb="1"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="1" cb="1"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocaleFunctionSupport.java"><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="2" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="1" cb="1"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="2" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="2" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="102"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="8" covered="25"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EvaluateFunction.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="57"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EndsWithFunction.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="59" covered="273"/><counter type="BRANCH" missed="19" covered="31"/><counter type="LINE" missed="16" covered="69"/><counter type="COMPLEXITY" missed="18" covered="23"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/jaxen/saxpath"><class name="org/jaxen/saxpath/SAXPathException" sourcefilename="SAXPathException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCause" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="135"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printStackTrace" desc="(Ljava/io/PrintStream;)V" line="149"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintWriter;)V" line="163"><counter type="INSTRUCTION" missed="10" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="71"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/XPathSyntaxException" sourcefilename="XPathSyntaxException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPath" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPositionMarker" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMultilineMessage" desc="()Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/saxpath/Axis" sourcefilename="Axis.java"><method name="lookup" desc="(I)Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)I" line="190"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XPathSyntaxException.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="23" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SAXPathException.java"><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="5" ci="3" mb="1" cb="1"/><line nr="136" mi="5" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="7" ci="0" mb="4" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="3" ci="4" mb="3" cb="1"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="71"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Axis.java"><line nr="134" mi="0" ci="2" mb="0" cb="14"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="2"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="2"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="2"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="2"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="120" covered="204"/><counter type="BRANCH" missed="11" covered="43"/><counter type="LINE" missed="22" covered="73"/><counter type="COMPLEXITY" missed="11" covered="39"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/jaxen/util"><class name="org/jaxen/util/FollowingAxisIterator" sourcefilename="FollowingAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="goForward" desc="()Z" line="91"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="goUp" desc="()Z" line="105"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="165"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="104"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/SingleObjectIterator" sourcefilename="SingleObjectIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/AncestorOrSelfAxisIterator" sourcefilename="AncestorOrSelfAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="94"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/PrecedingAxisIterator" sourcefilename="PrecedingAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="123"><counter type="INSTRUCTION" missed="6" covered="55"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="childrenOrSelf" desc="(Ljava/lang/Object;)Ljava/util/ListIterator;" line="146"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="139"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/AncestorAxisIterator" sourcefilename="AncestorAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/DescendantOrSelfAxisIterator" sourcefilename="DescendantOrSelfAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/SelfAxisIterator" sourcefilename="SelfAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/StackedIterator" sourcefilename="StackedIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="68"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="internalCreateIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="89"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="99"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="122"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pushIterator" desc="(Ljava/util/Iterator;)V" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="currentIterator" desc="()Ljava/util/Iterator;" line="134"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNavigator" desc="()Lorg/jaxen/Navigator;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/util/DescendantAxisIterator" sourcefilename="DescendantAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jaxen/Navigator;Ljava/util/Iterator;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="97"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="74"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/LinkedIterator" sourcefilename="LinkedIterator.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addIterator" desc="(Ljava/util/Iterator;)V" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="74"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/util/FollowingSiblingAxisIterator" sourcefilename="FollowingSiblingAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="128"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/SingletonList" sourcefilename="SingletonList.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/util/PrecedingSiblingAxisIterator" sourcefilename="PrecedingSiblingAxisIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/jaxen/Navigator;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="123"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SingletonList.java"><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AncestorAxisIterator.java"><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinkedIterator.java"><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="2" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="4" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrecedingAxisIterator.java"><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="1" cb="1"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="139"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescendantAxisIterator.java"><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="74"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FollowingAxisIterator.java"><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="1" cb="3"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="1" cb="3"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="104"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AncestorOrSelfAxisIterator.java"><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FollowingSiblingAxisIterator.java"><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StackedIterator.java"><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescendantOrSelfAxisIterator.java"><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SelfAxisIterator.java"><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleObjectIterator.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrecedingSiblingAxisIterator.java"><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="219" covered="589"/><counter type="BRANCH" missed="25" covered="65"/><counter type="LINE" missed="65" covered="164"/><counter type="COMPLEXITY" missed="30" covered="70"/><counter type="METHOD" missed="15" covered="40"/><counter type="CLASS" missed="2" covered="11"/></package><package name="org/jaxen/dom"><class name="org/jaxen/dom/DocumentNavigator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/jaxen/Navigator;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="136"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="162"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFollowingSiblingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecedingSiblingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="234"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFollowingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="253"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="288"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="324"><counter type="INSTRUCTION" missed="8" covered="159"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseXPath" desc="(Ljava/lang/String;)Lorg/jaxen/XPath;" line="410"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="420"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="437"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="455"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="473"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="491"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="509"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="527"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDocument" desc="(Ljava/lang/Object;)Z" line="544"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNamespace" desc="(Ljava/lang/Object;)Z" line="556"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElement" desc="(Ljava/lang/Object;)Z" line="567"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttribute" desc="(Ljava/lang/Object;)Z" line="581"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="(Ljava/lang/Object;)Z" line="594"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isText" desc="(Ljava/lang/Object;)Z" line="606"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProcessingInstruction" desc="(Ljava/lang/Object;)Z" line="627"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="640"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringValue" desc="(Lorg/w3c/dom/Node;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;" line="656"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="677"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTextStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="689"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="701"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="714"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespacePrefix" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="726"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="739"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="760"><counter type="INSTRUCTION" missed="45" covered="12"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="782"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="797"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementById" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="832"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="93" covered="592"/><counter type="BRANCH" missed="17" covered="93"/><counter type="LINE" missed="24" covered="128"/><counter type="COMPLEXITY" missed="15" covered="78"/><counter type="METHOD" missed="1" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DOMXPath" sourcefilename="DOMXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/NamespaceNode" sourcefilename="NamespaceNode.java"><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)V" line="123"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeName" desc="()Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeValue" desc="()Ljava/lang/String;" line="176"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeValue" desc="(Ljava/lang/String;)V" line="186"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeType" desc="()S" line="195"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="()Lorg/w3c/dom/Node;" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildNodes" desc="()Lorg/w3c/dom/NodeList;" line="217"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstChild" desc="()Lorg/w3c/dom/Node;" line="226"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChild" desc="()Lorg/w3c/dom/Node;" line="235"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPreviousSibling" desc="()Lorg/w3c/dom/Node;" line="244"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextSibling" desc="()Lorg/w3c/dom/Node;" line="253"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="()Lorg/w3c/dom/NamedNodeMap;" line="262"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOwnerDocument" desc="()Lorg/w3c/dom/Document;" line="271"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertBefore" desc="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="286"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceChild" desc="(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeChild" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="313"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendChild" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="326"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasChildNodes" desc="()Z" line="336"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cloneNode" desc="(Z)Lorg/w3c/dom/Node;" line="347"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalize" desc="()V" line="358"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSupported" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="368"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceURI" desc="()Ljava/lang/String;" line="380"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="()Ljava/lang/String;" line="393"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPrefix" desc="(Ljava/lang/String;)V" line="409"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocalName" desc="()Ljava/lang/String;" line="419"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAttributes" desc="()Z" line="428"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disallowModification" desc="()V" line="437"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="452"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="466"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="(Ljava/lang/Object;)I" line="486"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="503"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseURI" desc="()Ljava/lang/String;" line="518"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareDocumentPosition" desc="(Lorg/w3c/dom/Node;)S" line="539"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextContent" desc="()Ljava/lang/String;" line="554"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTextContent" desc="(Ljava/lang/String;)V" line="566"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSameNode" desc="(Lorg/w3c/dom/Node;)Z" line="580"><counter type="INSTRUCTION" missed="33" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="9" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookupPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="624"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDefaultNamespace" desc="(Ljava/lang/String;)Z" line="651"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookupNamespaceURI" desc="(Ljava/lang/String;)Ljava/lang/String;" line="669"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualNode" desc="(Lorg/w3c/dom/Node;)Z" line="693"><counter type="INSTRUCTION" missed="25" covered="45"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFeature" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="715"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUserData" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;" line="728"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserData" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="740"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="342" covered="176"/><counter type="BRANCH" missed="41" covered="19"/><counter type="LINE" missed="87" covered="41"/><counter type="COMPLEXITY" missed="57" covered="17"/><counter type="METHOD" missed="30" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$4" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="221"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$3" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="177"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="183"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$2" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="169"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="173"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$1" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/NamespaceNode$EmptyNodeList" sourcefilename="NamespaceNode.java"><method name="getLength" desc="()I" line="756"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="item" desc="(I)Lorg/w3c/dom/Node;" line="764"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/dom/DocumentNavigator$AttributeIterator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/w3c/dom/Node;)V" line="849"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="869"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="873"><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="883"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="66"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$NodeIterator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="906"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="914"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="918"><counter type="INSTRUCTION" missed="11" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="928"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isXPathNode" desc="(Lorg/w3c/dom/Node;)Z" line="964"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="60"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$5" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="236"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="240"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom/DocumentNavigator$6" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/dom/DocumentNavigator;Lorg/w3c/dom/Node;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="255"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextNode" desc="(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;" line="268"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DOMXPath.java"><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NamespaceNode.java"><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="1" cb="1"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="2" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="10" ci="0" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="6" mb="0" cb="0"/><line nr="452" mi="0" ci="15" mb="0" cb="0"/><line nr="466" mi="5" ci="0" mb="2" cb="0"/><line nr="467" mi="4" ci="0" mb="2" cb="0"/><line nr="468" mi="3" ci="0" mb="2" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="470" mi="25" ci="0" mb="6" cb="0"/><line nr="474" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="5" mb="1" cb="1"/><line nr="503" mi="14" ci="0" mb="8" cb="0"/><line nr="518" mi="2" ci="0" mb="0" cb="0"/><line nr="520" mi="3" ci="0" mb="0" cb="0"/><line nr="521" mi="5" ci="0" mb="0" cb="0"/><line nr="522" mi="7" ci="0" mb="0" cb="0"/><line nr="523" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="1" ci="0" mb="0" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="543" mi="2" ci="0" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="2" ci="0" mb="0" cb="0"/><line nr="567" mi="1" ci="0" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="591" mi="0" ci="7" mb="0" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="6" ci="0" mb="0" cb="0"/><line nr="596" mi="3" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="601" mi="1" ci="0" mb="0" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="2" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="8" mb="1" cb="3"/><line nr="624" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="7" ci="0" mb="0" cb="0"/><line nr="626" mi="5" ci="0" mb="0" cb="0"/><line nr="627" mi="7" ci="0" mb="0" cb="0"/><line nr="628" mi="7" ci="0" mb="0" cb="0"/><line nr="629" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="1" ci="0" mb="0" cb="0"/><line nr="631" mi="5" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="633" mi="5" ci="0" mb="0" cb="0"/><line nr="634" mi="1" ci="0" mb="0" cb="0"/><line nr="635" mi="5" ci="0" mb="0" cb="0"/><line nr="651" mi="6" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="670" mi="7" ci="0" mb="0" cb="0"/><line nr="671" mi="5" ci="0" mb="0" cb="0"/><line nr="672" mi="7" ci="0" mb="0" cb="0"/><line nr="673" mi="7" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="0" mb="0" cb="0"/><line nr="675" mi="1" ci="0" mb="0" cb="0"/><line nr="676" mi="5" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="678" mi="5" ci="0" mb="0" cb="0"/><line nr="679" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="5" ci="0" mb="0" cb="0"/><line nr="693" mi="0" ci="5" mb="1" cb="1"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="5" ci="3" mb="3" cb="1"/><line nr="696" mi="2" ci="6" mb="2" cb="2"/><line nr="697" mi="5" ci="3" mb="3" cb="1"/><line nr="698" mi="2" ci="6" mb="2" cb="2"/><line nr="699" mi="3" ci="3" mb="3" cb="1"/><line nr="700" mi="6" ci="0" mb="0" cb="0"/><line nr="703" mi="0" ci="16" mb="1" cb="3"/><line nr="705" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="4" ci="0" mb="0" cb="0"/><line nr="729" mi="6" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="5" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="764" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="346" covered="176"/><counter type="BRANCH" missed="41" covered="19"/><counter type="LINE" missed="89" covered="41"/><counter type="COMPLEXITY" missed="59" covered="17"/><counter type="METHOD" missed="32" covered="14"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="DocumentNavigator.java"><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="4"/><line nr="139" mi="0" ci="15" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="14" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="14" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="15" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="15" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="15" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="2"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="1" cb="1"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="2"/><line nr="273" mi="0" ci="7" mb="0" cb="2"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="2"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="2"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="2"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="1" cb="3"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="1" cb="1"/><line nr="340" mi="0" ci="8" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="2"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="2"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="2"/><line nr="354" mi="0" ci="2" mb="0" cb="2"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="0"/><line nr="359" mi="0" ci="9" mb="0" cb="2"/><line nr="365" mi="0" ci="7" mb="0" cb="2"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="2"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="9" mb="0" cb="2"/><line nr="383" mi="0" ci="11" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="4" ci="2" mb="3" cb="1"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="6" mb="0" cb="2"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="2"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="2"/><line nr="456" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="6" mb="0" cb="2"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="2"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="2"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="4" mb="0" cb="2"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="2"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="2"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="1" ci="0" mb="0" cb="0"/><line nr="532" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="12" mb="0" cb="4"/><line nr="556" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="12" mb="0" cb="4"/><line nr="581" mi="0" ci="18" mb="1" cb="5"/><line nr="594" mi="0" ci="12" mb="0" cb="4"/><line nr="606" mi="0" ci="3" mb="0" cb="2"/><line nr="607" mi="0" ci="4" mb="0" cb="2"/><line nr="610" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="0" ci="2" mb="0" cb="0"/><line nr="627" mi="0" ci="12" mb="0" cb="4"/><line nr="640" mi="0" ci="4" mb="1" cb="1"/><line nr="641" mi="0" ci="9" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="656" mi="0" ci="4" mb="0" cb="2"/><line nr="657" mi="0" ci="6" mb="0" cb="0"/><line nr="659" mi="0" ci="3" mb="0" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="7" mb="0" cb="2"/><line nr="662" mi="0" ci="7" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="677" mi="0" ci="8" mb="1" cb="1"/><line nr="678" mi="2" ci="0" mb="0" cb="0"/><line nr="689" mi="0" ci="8" mb="1" cb="1"/><line nr="690" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="0" ci="8" mb="1" cb="1"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="714" mi="0" ci="8" mb="1" cb="1"/><line nr="715" mi="2" ci="0" mb="0" cb="0"/><line nr="726" mi="0" ci="8" mb="1" cb="1"/><line nr="727" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="2" cb="0"/><line nr="741" mi="4" ci="0" mb="0" cb="0"/><line nr="742" mi="8" ci="0" mb="2" cb="0"/><line nr="743" mi="1" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="4" mb="0" cb="0"/><line nr="764" mi="1" ci="0" mb="0" cb="0"/><line nr="765" mi="14" ci="0" mb="0" cb="0"/><line nr="766" mi="1" ci="0" mb="0" cb="0"/><line nr="767" mi="14" ci="0" mb="0" cb="0"/><line nr="768" mi="1" ci="0" mb="0" cb="0"/><line nr="769" mi="14" ci="0" mb="0" cb="0"/><line nr="782" mi="0" ci="4" mb="0" cb="2"/><line nr="783" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="12" mb="0" cb="0"/><line nr="797" mi="0" ci="4" mb="0" cb="2"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="3" mb="0" cb="0"/><line nr="801" mi="0" ci="12" mb="0" cb="0"/><line nr="832" mi="0" ci="5" mb="0" cb="0"/><line nr="833" mi="0" ci="6" mb="1" cb="1"/><line nr="834" mi="2" ci="0" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="857" mi="0" ci="4" mb="0" cb="0"/><line nr="858" mi="0" ci="3" mb="0" cb="0"/><line nr="859" mi="0" ci="10" mb="0" cb="2"/><line nr="860" mi="0" ci="5" mb="0" cb="0"/><line nr="861" mi="0" ci="5" mb="0" cb="2"/><line nr="862" mi="0" ci="3" mb="0" cb="0"/><line nr="863" mi="0" ci="1" mb="0" cb="0"/><line nr="866" mi="0" ci="1" mb="0" cb="0"/><line nr="869" mi="0" ci="9" mb="0" cb="2"/><line nr="873" mi="0" ci="11" mb="0" cb="0"/><line nr="874" mi="4" ci="2" mb="1" cb="1"/><line nr="875" mi="0" ci="5" mb="1" cb="1"/><line nr="878" mi="3" ci="0" mb="0" cb="0"/><line nr="879" mi="0" ci="2" mb="0" cb="0"/><line nr="883" mi="4" ci="0" mb="0" cb="0"/><line nr="906" mi="0" ci="5" mb="0" cb="0"/><line nr="907" mi="0" ci="5" mb="0" cb="0"/><line nr="908" mi="0" ci="5" mb="0" cb="2"/><line nr="909" mi="0" ci="7" mb="0" cb="0"/><line nr="911" mi="0" ci="1" mb="0" cb="0"/><line nr="914" mi="0" ci="7" mb="0" cb="2"/><line nr="918" mi="4" ci="3" mb="1" cb="1"/><line nr="919" mi="0" ci="3" mb="0" cb="0"/><line nr="920" mi="0" ci="6" mb="0" cb="0"/><line nr="921" mi="0" ci="5" mb="1" cb="1"/><line nr="922" mi="7" ci="0" mb="0" cb="0"/><line nr="924" mi="0" ci="2" mb="0" cb="0"/><line nr="928" mi="4" ci="0" mb="0" cb="0"/><line nr="964" mi="0" ci="4" mb="0" cb="2"/><line nr="966" mi="0" ci="3" mb="0" cb="2"/><line nr="972" mi="0" ci="2" mb="0" cb="0"/><line nr="974" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="832"/><counter type="BRANCH" missed="22" covered="120"/><counter type="LINE" missed="29" covered="179"/><counter type="COMPLEXITY" missed="22" covered="114"/><counter type="METHOD" missed="3" covered="62"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><counter type="INSTRUCTION" missed="467" covered="1013"/><counter type="BRANCH" missed="63" covered="139"/><counter type="LINE" missed="118" covered="222"/><counter type="COMPLEXITY" missed="81" covered="132"/><counter type="METHOD" missed="35" covered="77"/><counter type="CLASS" missed="1" covered="11"/></package><package name="org/jaxen/dom4j"><class name="org/jaxen/dom4j/Dom4jXPath" sourcefilename="Dom4jXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom4j/DocumentNavigator$Singleton" sourcefilename="DocumentNavigator.java"><method name="&lt;clinit&gt;" desc="()V" line="425"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/dom4j/DocumentNavigator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lorg/jaxen/Navigator;" line="87"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElement" desc="(Ljava/lang/Object;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="(Ljava/lang/Object;)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isText" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttribute" desc="(Ljava/lang/Object;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProcessingInstruction" desc="(Ljava/lang/Object;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDocument" desc="(Ljava/lang/Object;)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNamespace" desc="(Ljava/lang/Object;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="165"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="189"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="211"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="227"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator;" line="249"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="261"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseXPath" desc="(Ljava/lang/String;)Lorg/jaxen/XPath;" line="307"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="311"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTextStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="326"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="330"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="334"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeStringValue" desc="(Lorg/dom4j/Node;)Ljava/lang/String;" line="338"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="342"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespacePrefix" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="348"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="354"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="360"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeType" desc="(Ljava/lang/Object;)S" line="378"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="386"><counter type="INSTRUCTION" missed="14" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="393"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="399"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSAXReader" desc="()Lorg/dom4j/io/SAXReader;" line="407"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSAXReader" desc="(Lorg/dom4j/io/SAXReader;)V" line="415"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="384"/><counter type="BRANCH" missed="14" covered="54"/><counter type="LINE" missed="27" covered="114"/><counter type="COMPLEXITY" missed="15" covered="57"/><counter type="METHOD" missed="5" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DocumentNavigator.java"><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="4"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="1" cb="1"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="1" cb="1"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="4"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="1" cb="1"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="2"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="2"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="2"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="1" cb="1"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="1" cb="1"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="2"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="2" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="2" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="2" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="1" cb="1"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="13" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="2"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="389"/><counter type="BRANCH" missed="14" covered="54"/><counter type="LINE" missed="27" covered="115"/><counter type="COMPLEXITY" missed="15" covered="58"/><counter type="METHOD" missed="5" covered="34"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Dom4jXPath.java"><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="79" covered="394"/><counter type="BRANCH" missed="14" covered="54"/><counter type="LINE" missed="27" covered="117"/><counter type="COMPLEXITY" missed="15" covered="59"/><counter type="METHOD" missed="5" covered="35"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/jaxen"><class name="org/jaxen/UnsupportedAxisException" sourcefilename="UnsupportedAxisException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/SimpleFunctionContext" sourcefilename="SimpleFunctionContext.java"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFunction" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/jaxen/Function;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jaxen/Function;" line="121"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/XPathFunctionContext" sourcefilename="XPathFunctionContext.java"><method name="getInstance" desc="()Lorg/jaxen/FunctionContext;" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="147"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerXPathFunctions" desc="()V" line="157"><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerXSLTFunctions" desc="()V" line="269"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerExtensionFunctions" desc="()V" line="278"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="249"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/SimpleVariableContext" sourcefilename="SimpleVariableContext.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableValue" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableValue" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableValue" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/BaseXPath" sourcefilename="BaseXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/jaxen/Navigator;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="175"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectNodes" desc="(Ljava/lang/Object;)Ljava/util/List;" line="214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectSingleNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="236"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringValueOf" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="279"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="booleanValueOf" desc="(Ljava/lang/Object;)Z" line="311"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberValueOf" desc="(Ljava/lang/Object;)Ljava/lang/Number;" line="336"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNamespace" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="371"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNamespaceContext" desc="(Lorg/jaxen/NamespaceContext;)V" line="406"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFunctionContext" desc="(Lorg/jaxen/FunctionContext;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableContext" desc="(Lorg/jaxen/VariableContext;)V" line="444"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceContext" desc="()Lorg/jaxen/NamespaceContext;" line="467"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionContext" desc="()Lorg/jaxen/FunctionContext;" line="490"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableContext" desc="()Lorg/jaxen/VariableContext;" line="513"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootExpr" desc="()Lorg/jaxen/expr/Expr;" line="533"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="542"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="()Ljava/lang/String;" line="551"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="(Ljava/lang/Object;)Lorg/jaxen/Context;" line="571"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextSupport" desc="()Lorg/jaxen/ContextSupport;" line="600"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNavigator" desc="()Lorg/jaxen/Navigator;" line="620"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFunctionContext" desc="()Lorg/jaxen/FunctionContext;" line="637"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNamespaceContext" desc="()Lorg/jaxen/NamespaceContext;" line="646"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createVariableContext" desc="()Lorg/jaxen/VariableContext;" line="655"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectNodesForContext" desc="(Lorg/jaxen/Context;)Ljava/util/List;" line="675"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectSingleNodeForContext" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="698"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="273"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="1" covered="78"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/ContextSupport" sourcefilename="ContextSupport.java"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jaxen/NamespaceContext;Lorg/jaxen/FunctionContext;Lorg/jaxen/VariableContext;Lorg/jaxen/Navigator;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNamespaceContext" desc="(Lorg/jaxen/NamespaceContext;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespaceContext" desc="()Lorg/jaxen/NamespaceContext;" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFunctionContext" desc="(Lorg/jaxen/FunctionContext;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionContext" desc="()Lorg/jaxen/FunctionContext;" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableContext" desc="(Lorg/jaxen/VariableContext;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableContext" desc="()Lorg/jaxen/VariableContext;" line="160"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNavigator" desc="()Lorg/jaxen/Navigator;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;)Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableValue" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="211"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jaxen/Function;" line="238"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="79"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/Context" sourcefilename="Context.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/ContextSupport;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeSet" desc="(Ljava/util/List;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeSet" desc="()Ljava/util/List;" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContextSupport" desc="(Lorg/jaxen/ContextSupport;)V" line="149"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContextSupport" desc="()Lorg/jaxen/ContextSupport;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNavigator" desc="()Lorg/jaxen/Navigator;" line="167"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;)Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableValue" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="196"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jaxen/Function;" line="216"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSize" desc="(I)V" line="231"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="240"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosition" desc="(I)V" line="249"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="258"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="duplicate" desc="()Lorg/jaxen/Context;" line="271"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="104"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/FunctionCallException" sourcefilename="FunctionCallException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Exception;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNestedException" desc="()Ljava/lang/Throwable;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/QualifiedName" sourcefilename="QualifiedName.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClarkForm" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="17" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="47"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/UnresolvableException" sourcefilename="UnresolvableException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/SimpleNamespaceContext" sourcefilename="SimpleNamespaceContext.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="89"><counter type="INSTRUCTION" missed="1" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addElementNamespaces" desc="(Lorg/jaxen/Navigator;Ljava/lang/Object;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNamespace" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/JaxenRuntimeException" sourcefilename="JaxenRuntimeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCause" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="111"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printStackTrace" desc="(Ljava/io/PrintStream;)V" line="125"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintWriter;)V" line="139"><counter type="INSTRUCTION" missed="10" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="44"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/JaxenHandler" sourcefilename="JaxenHandler.java"><method name="&lt;init&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setXPathFactory" desc="(Lorg/jaxen/expr/XPathFactory;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathFactory" desc="()Lorg/jaxen/expr/XPathFactory;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathExpr" desc="()Lorg/jaxen/expr/XPathExpr;" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathExpr" desc="(Z)Lorg/jaxen/expr/XPathExpr;" line="148"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startXPath" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endXPath" desc="()V" line="165"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startPathExpr" desc="()V" line="171"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endPathExpr" desc="()V" line="195"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startAbsoluteLocationPath" desc="()V" line="223"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endAbsoluteLocationPath" desc="()V" line="230"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startRelativeLocationPath" desc="()V" line="235"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRelativeLocationPath" desc="()V" line="242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endLocationPath" desc="()V" line="247"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSteps" desc="(Lorg/jaxen/expr/LocationPath;Ljava/util/Iterator;)V" line="258"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startNameStep" desc="(ILjava/lang/String;Ljava/lang/String;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endNameStep" desc="()V" line="277"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startTextNodeStep" desc="(I)V" line="283"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endTextNodeStep" desc="()V" line="290"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startCommentNodeStep" desc="(I)V" line="295"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endCommentNodeStep" desc="()V" line="302"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startAllNodeStep" desc="(I)V" line="307"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endAllNodeStep" desc="()V" line="314"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startProcessingInstructionNodeStep" desc="(ILjava/lang/String;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endProcessingInstructionNodeStep" desc="()V" line="328"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endStep" desc="()V" line="333"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startPredicate" desc="()V" line="343"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endPredicate" desc="()V" line="348"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startFilterExpr" desc="()V" line="357"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endFilterExpr" desc="()V" line="362"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPredicates" desc="(Lorg/jaxen/expr/Predicated;Ljava/util/Iterator;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnExpr" desc="()V" line="385"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startOrExpr" desc="()V" line="392"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endOrExpr" desc="(Z)V" line="397"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startAndExpr" desc="()V" line="409"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endAndExpr" desc="(Z)V" line="414"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startEqualityExpr" desc="()V" line="427"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endEqualityExpr" desc="(I)V" line="432"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startRelationalExpr" desc="()V" line="446"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRelationalExpr" desc="(I)V" line="451"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startAdditiveExpr" desc="()V" line="465"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endAdditiveExpr" desc="(I)V" line="470"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startMultiplicativeExpr" desc="()V" line="484"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endMultiplicativeExpr" desc="(I)V" line="489"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startUnaryExpr" desc="()V" line="503"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endUnaryExpr" desc="(I)V" line="508"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startUnionExpr" desc="()V" line="517"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endUnionExpr" desc="(Z)V" line="522"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="number" desc="(I)V" line="535"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="(D)V" line="540"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="(Ljava/lang/String;)V" line="545"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variableReference" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="551"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startFunction" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="558"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endFunction" desc="()V" line="565"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameters" desc="(Lorg/jaxen/expr/FunctionCallExpr;Ljava/util/Iterator;)V" line="576"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stackSize" desc="()I" line="584"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="589"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()Ljava/lang/Object;" line="594"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canPop" desc="()Z" line="599"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pushFrame" desc="()V" line="604"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popFrame" desc="()Ljava/util/LinkedList;" line="609"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekFrame" desc="()Ljava/util/LinkedList;" line="614"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="514"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="7" covered="165"/><counter type="COMPLEXITY" missed="10" covered="68"/><counter type="METHOD" missed="3" covered="59"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/JaxenConstants" sourcefilename="JaxenConstants.java"><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/DefaultNavigator" sourcefilename="DefaultNavigator.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescendantAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAncestorAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFollowingSiblingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecedingSiblingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFollowingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="140"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecedingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="164"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="176"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSelfAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescendantOrSelfAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="186"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAncestorOrSelfAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeType" desc="(Ljava/lang/Object;)S" line="218"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="261"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="281"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementById" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="296"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="98"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="18" covered="21"/><counter type="COMPLEXITY" missed="19" covered="12"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/JaxenException" sourcefilename="JaxenException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/XPathSyntaxException" sourcefilename="XPathSyntaxException.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/saxpath/XPathSyntaxException;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPath" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPositionMarker" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultilineMessage" desc="()Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultNavigator.java"><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="1" cb="1"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="1" cb="1"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="1" cb="1"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="1" cb="1"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="1" cb="1"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="1" cb="1"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="1" cb="1"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="2" cb="2"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="98"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="18" covered="21"/><counter type="COMPLEXITY" missed="19" covered="12"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleNamespaceContext.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="1" cb="3"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Context.java"><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="1" cb="1"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="104"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaxenException.java"><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QualifiedName.java"><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="1" ci="15" mb="2" cb="2"/><line nr="99" mi="0" ci="8" mb="1" cb="1"/><line nr="100" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="47"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleFunctionContext.java"><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="2"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathSyntaxException.java"><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsupportedAxisException.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnresolvableException.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaxenConstants.java"><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaxenRuntimeException.java"><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="5" ci="3" mb="1" cb="1"/><line nr="112" mi="5" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="4" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="3" ci="4" mb="3" cb="1"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="44"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaseXPath.java"><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="1" cb="3"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="9" mb="0" cb="6"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="2"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="2" ci="2" mb="1" cb="1"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="0" ci="4" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="2"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="2"/><line nr="580" mi="0" ci="5" mb="0" cb="0"/><line nr="584" mi="0" ci="5" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="3" mb="0" cb="2"/><line nr="602" mi="0" ci="13" mb="0" cb="0"/><line nr="610" mi="0" ci="3" mb="0" cb="0"/><line nr="620" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="655" mi="0" ci="4" mb="0" cb="0"/><line nr="675" mi="0" ci="5" mb="0" cb="0"/><line nr="676" mi="0" ci="2" mb="0" cb="0"/><line nr="698" mi="0" ci="4" mb="0" cb="0"/><line nr="700" mi="0" ci="3" mb="0" cb="2"/><line nr="702" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="273"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="1" covered="78"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XPathFunctionContext.java"><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="249"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleVariableContext.java"><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContextSupport.java"><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="1" cb="1"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="1" cb="1"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="1" cb="1"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="79"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaxenHandler.java"><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="1" cb="3"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="2"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="3" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="2"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="7" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="2"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="1" cb="1"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="1" cb="1"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="8" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="1" cb="1"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="8" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="1" cb="1"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="8" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="1" cb="1"/><line nr="510" mi="0" ci="9" mb="0" cb="0"/><line nr="513" mi="0" ci="1" mb="0" cb="0"/><line nr="517" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="2"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="7" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="6" ci="0" mb="0" cb="0"/><line nr="536" mi="1" ci="0" mb="0" cb="0"/><line nr="540" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="6" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="7" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="2"/><line nr="578" mi="0" ci="6" mb="0" cb="0"/><line nr="580" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="590" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="599" mi="8" ci="0" mb="2" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="514"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="7" covered="165"/><counter type="COMPLEXITY" missed="10" covered="68"/><counter type="METHOD" missed="3" covered="59"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionCallException.java"><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="157" covered="1742"/><counter type="BRANCH" missed="37" covered="91"/><counter type="LINE" missed="42" covered="483"/><counter type="COMPLEXITY" missed="50" covered="197"/><counter type="METHOD" missed="17" covered="166"/><counter type="CLASS" missed="0" covered="17"/></package><package name="org/jaxen/xom"><class name="org/jaxen/xom/DocumentNavigator$XPathNamespace" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lnu/xom/Element;Ljava/lang/String;Ljava/lang/String;)V" line="356"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lnu/xom/Element;" line="368"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceURI" desc="()Ljava/lang/String;" line="372"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespacePrefix" desc="()Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="380"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/xom/XOMXPath" sourcefilename="XOMXPath.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/xom/DocumentNavigator$IndexIterator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;II)V" line="321"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="331"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="337"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="341"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/xom/DocumentNavigator$1" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/xom/DocumentNavigator;Ljava/lang/Object;II)V" line="200"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="202"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/xom/DocumentNavigator$2" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/xom/DocumentNavigator;Ljava/lang/Object;II)V" line="213"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/xom/DocumentNavigator" sourcefilename="DocumentNavigator.java"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttribute" desc="(Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComment" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDocument" desc="(Ljava/lang/Object;)Z" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isElement" desc="(Ljava/lang/Object;)Z" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNamespace" desc="(Ljava/lang/Object;)Z" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isProcessingInstruction" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isText" desc="(Ljava/lang/Object;)Z" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommentStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementNamespaceUri" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementQName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespacePrefix" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextStringValue" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocument" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="199"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="212"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="223"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNode" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="235"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrecedingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="239"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrecedingSiblingAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="245"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionData" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessingInstructionTarget" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="255"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateNamespacePrefixToUri" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="259"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseXPath" desc="(Ljava/lang/String;)Lorg/jaxen/XPath;" line="277"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addNamespaceForElement" desc="(Lnu/xom/Element;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Z" line="283"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamespaceAxisIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="293"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="440" covered="3"/><counter type="BRANCH" missed="76" covered="0"/><counter type="LINE" missed="92" covered="2"/><counter type="COMPLEXITY" missed="71" covered="1"/><counter type="METHOD" missed="33" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XOMXPath.java"><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DocumentNavigator.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="2" cb="0"/><line nr="113" mi="10" ci="0" mb="2" cb="0"/><line nr="117" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="10" ci="0" mb="2" cb="0"/><line nr="127" mi="10" ci="0" mb="2" cb="0"/><line nr="131" mi="10" ci="0" mb="2" cb="0"/><line nr="135" mi="10" ci="0" mb="2" cb="0"/><line nr="139" mi="10" ci="0" mb="2" cb="0"/><line nr="143" mi="9" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="9" ci="0" mb="2" cb="0"/><line nr="180" mi="9" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="2" cb="0"/><line nr="200" mi="19" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="7" ci="0" mb="4" cb="0"/><line nr="213" mi="19" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="2" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="9" ci="0" mb="2" cb="0"/><line nr="255" mi="9" ci="0" mb="2" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="2" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="2" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="2" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="2" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="9" ci="0" mb="6" cb="0"/><line nr="284" mi="10" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="2" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="2" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="7" ci="0" mb="2" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="7" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="7" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="6" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="9" ci="0" mb="2" cb="0"/><line nr="337" mi="12" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="23" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="558" covered="3"/><counter type="BRANCH" missed="78" covered="0"/><counter type="LINE" missed="113" covered="2"/><counter type="COMPLEXITY" missed="85" covered="1"/><counter type="METHOD" missed="46" covered="1"/><counter type="CLASS" missed="4" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="558" covered="10"/><counter type="BRANCH" missed="78" covered="0"/><counter type="LINE" missed="113" covered="4"/><counter type="COMPLEXITY" missed="85" covered="2"/><counter type="METHOD" missed="46" covered="2"/><counter type="CLASS" missed="4" covered="2"/></package><package name="org/jaxen/function/xslt"><class name="org/jaxen/function/xslt/DocumentFunction" sourcefilename="DocumentFunction.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/lang/String;Lorg/jaxen/Navigator;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DocumentFunction.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/jaxen/pattern"><class name="org/jaxen/pattern/AnyChildNodeTest" sourcefilename="AnyChildNodeTest.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/jaxen/pattern/AnyChildNodeTest;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="74"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="80"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchType" desc="()S" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/pattern/PatternHandler" sourcefilename="PatternHandler.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Lorg/jaxen/pattern/Pattern;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="(Z)Lorg/jaxen/pattern/Pattern;" line="100"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endXPath" desc="()V" line="111"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endPathExpr" desc="()V" line="134"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAbsoluteLocationPath" desc="()V" line="169"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endAbsoluteLocationPath" desc="()V" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startRelativeLocationPath" desc="()V" line="181"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endRelativeLocationPath" desc="()V" line="188"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endLocationPath" desc="()V" line="193"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startNameStep" desc="(ILjava/lang/String;Ljava/lang/String;)V" line="227"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startTextNodeStep" desc="(I)V" line="249"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startCommentNodeStep" desc="(I)V" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAllNodeStep" desc="(I)V" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProcessingInstructionNodeStep" desc="(ILjava/lang/String;)V" line="271"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endStep" desc="()V" line="278"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startUnionExpr" desc="()V" line="291"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endUnionExpr" desc="(Z)V" line="296"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAbsoluteLocationPath" desc="()Lorg/jaxen/pattern/Pattern;" line="308"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRelativeLocationPath" desc="()Lorg/jaxen/pattern/Pattern;" line="312"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="BRANCH" missed="35" covered="0"/><counter type="LINE" missed="86" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/pattern/NamespaceTest" sourcefilename="NamespaceTest.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;S)V" line="72"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="84"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchType" desc="()S" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getURI" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="16"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/UnionPattern" sourcefilename="UnionPattern.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/jaxen/pattern/Pattern;Lorg/jaxen/pattern/Pattern;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLHS" desc="()Lorg/jaxen/pattern/Pattern;" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLHS" desc="(Lorg/jaxen/pattern/Pattern;)V" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRHS" desc="()Lorg/jaxen/pattern/Pattern;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRHS" desc="(Lorg/jaxen/pattern/Pattern;)V" line="92"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="104"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnionPatterns" desc="()[Lorg/jaxen/pattern/Pattern;" line="108"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchType" desc="()S" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchesNodeName" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/pattern/Pattern;" line="123"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="140"><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="101" covered="66"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="15" covered="21"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/NodeTest" sourcefilename="NodeTest.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/LocationPathPattern" sourcefilename="LocationPathPattern.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jaxen/pattern/NodeTest;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/pattern/Pattern;" line="106"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFilter" desc="(Lorg/jaxen/expr/FilterExpr;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParentPattern" desc="(Lorg/jaxen/pattern/Pattern;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAncestorPattern" desc="(Lorg/jaxen/pattern/Pattern;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeTest" desc="(Lorg/jaxen/pattern/NodeTest;)V" line="155"><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="166"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="231"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchType" desc="()S" line="239"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="243"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAbsolute" desc="()Z" line="281"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAbsolute" desc="(Z)V" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasAnyNodeTest" desc="()Z" line="289"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="249" covered="98"/><counter type="BRANCH" missed="40" covered="18"/><counter type="LINE" missed="60" covered="31"/><counter type="COMPLEXITY" missed="28" covered="16"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/Pattern" sourcefilename="Pattern.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()D" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnionPatterns" desc="()[Lorg/jaxen/pattern/Pattern;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchType" desc="()S" line="172"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchesNodeName" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/pattern/Pattern;" line="192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/TextNodeTest" sourcefilename="TextNodeTest.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="74"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchType" desc="()S" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/NodeTypeTest" sourcefilename="NodeTypeTest.java"><method name="&lt;init&gt;" desc="(S)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="94"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchType" desc="()S" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="47"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/NoNodeTest" sourcefilename="NoNodeTest.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/jaxen/pattern/NoNodeTest;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchType" desc="()S" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jaxen/pattern/PatternParser" sourcefilename="PatternParser.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lorg/jaxen/pattern/Pattern;" line="85"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertExpr" desc="(Lorg/jaxen/expr/Expr;)Lorg/jaxen/pattern/Pattern;" line="102"><counter type="INSTRUCTION" missed="25" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertExpr" desc="(Lorg/jaxen/expr/LocationPath;)Lorg/jaxen/pattern/LocationPathPattern;" line="122"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertStep" desc="(Lorg/jaxen/pattern/LocationPathPattern;Lorg/jaxen/expr/Step;)Lorg/jaxen/pattern/LocationPathPattern;" line="156"><counter type="INSTRUCTION" missed="38" covered="93"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="7" covered="26"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertDefaultStep" desc="(Lorg/jaxen/pattern/LocationPathPattern;Lorg/jaxen/expr/DefaultStep;)Lorg/jaxen/pattern/LocationPathPattern;" line="204"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="navigationStep" desc="(Lorg/jaxen/expr/Step;)Z" line="216"><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="265"/><counter type="BRANCH" missed="15" covered="39"/><counter type="LINE" missed="15" covered="74"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/NameTest" sourcefilename="NameTest.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;S)V" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="81"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchType" desc="()S" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="14"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="6"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/pattern/AnyNodeTest" sourcefilename="AnyNodeTest.java"><method name="getInstance" desc="()Lorg/jaxen/pattern/AnyNodeTest;" line="67"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/Context;)Z" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()D" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchType" desc="()S" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Pattern.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyChildNodeTest.java"><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="16" ci="0" mb="8" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NoNodeTest.java"><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LocationPathPattern.java"><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="4"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="1" cb="3"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="17" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="2" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="2" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="2" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="7" ci="0" mb="2" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="1" cb="1"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="2" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="7" ci="0" mb="2" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="35" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="249" covered="98"/><counter type="BRANCH" missed="40" covered="18"/><counter type="LINE" missed="60" covered="31"/><counter type="COMPLEXITY" missed="28" covered="16"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PatternParser.java"><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="1" cb="1"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="1" cb="3"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="1" cb="1"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="1" cb="1"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="1" cb="1"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="1" cb="3"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="14" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="2"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="2"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="1" cb="1"/><line nr="219" mi="8" ci="0" mb="2" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="265"/><counter type="BRANCH" missed="15" covered="39"/><counter type="LINE" missed="15" covered="74"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnionPattern.java"><line nr="64" mi="3" ci="3" mb="0" cb="0"/><line nr="65" mi="3" ci="3" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="16" ci="0" mb="4" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="20" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="1" ci="7" mb="1" cb="1"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="6" ci="2" mb="5" cb="1"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="66"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="15" covered="21"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameTest.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="15" ci="0" mb="4" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="15" ci="0" mb="4" cb="0"/><line nr="89" mi="4" ci="0" mb="2" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="14"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="6"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeTypeTest.java"><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="2" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="8" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="47"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NamespaceTest.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="14" ci="0" mb="4" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="14" ci="0" mb="4" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="111" mi="20" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="16"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextNodeTest.java"><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PatternHandler.java"><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="4" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="11" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="10" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="2" cb="0"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="2" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="3" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="9" ci="0" mb="6" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="9" ci="0" mb="6" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="2" cb="0"/><line nr="283" mi="10" ci="0" mb="0" cb="0"/><line nr="286" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="2" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="BRANCH" missed="35" covered="0"/><counter type="LINE" missed="86" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeTest.java"><line nr="58" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyNodeTest.java"><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1032" covered="533"/><counter type="BRANCH" missed="153" covered="60"/><counter type="LINE" missed="244" covered="161"/><counter type="COMPLEXITY" missed="159" covered="60"/><counter type="METHOD" missed="70" covered="39"/><counter type="CLASS" missed="3" covered="10"/></package><package name="org/jaxen/expr"><class name="org/jaxen/expr/DefaultLiteralExpr" sourcefilename="DefaultLiteralExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLiteral" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultEqualsExpr" sourcefilename="DefaultEqualsExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateObjectObject" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultPlusExpr" sourcefilename="DefaultPlusExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultNotEqualsExpr" sourcefilename="DefaultNotEqualsExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateObjectObject" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultUnionExpr" sourcefilename="DefaultUnionExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultFunctionCallExpr" sourcefilename="DefaultFunctionCallExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Lorg/jaxen/expr/Expr;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()Ljava/util/List;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionName" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="8" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="127"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateParams" desc="(Lorg/jaxen/Context;)Ljava/util/List;" line="171"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="178"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="6" covered="47"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultAndExpr" sourcefilename="DefaultAndExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultPathExpr" sourcefilename="DefaultPathExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/LocationPath;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilterExpr" desc="()Lorg/jaxen/expr/Expr;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilterExpr" desc="(Lorg/jaxen/expr/Expr;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocationPath" desc="()Lorg/jaxen/expr/LocationPath;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="109"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="138"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultLessThanExpr" sourcefilename="DefaultLessThanExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDoubleDouble" desc="(Ljava/lang/Double;Ljava/lang/Double;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultUnaryExpr" sourcefilename="DefaultUnaryExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpr" desc="()Lorg/jaxen/expr/Expr;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultOrExpr" sourcefilename="DefaultOrExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/IdentitySet$IdentityWrapper" sourcefilename="IdentitySet.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultTruthExpr" sourcefilename="DefaultTruthExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bothAreSets" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eitherIsSet" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSet" desc="(Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBoolean" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsEmpty" desc="(Ljava/util/List;)Z" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eitherIsBoolean" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bothAreBoolean" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eitherIsNumber" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="60"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultStep" sourcefilename="DefaultStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Lorg/jaxen/expr/PredicateSet;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPredicate" desc="(Lorg/jaxen/expr/Predicate;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicates" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicateSet" desc="()Lorg/jaxen/expr/PredicateSet;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIterableAxis" desc="()Lorg/jaxen/expr/iter/IterableAxis;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxisName" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simplify" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="axisIterator" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Ljava/util/Iterator;" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/util/List;" line="115"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="119"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultAdditiveExpr" sourcefilename="DefaultAdditiveExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultLessThanEqualExpr" sourcefilename="DefaultLessThanEqualExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDoubleDouble" desc="(Ljava/lang/Double;Ljava/lang/Double;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultProcessingInstructionNodeStep" sourcefilename="DefaultProcessingInstructionNodeStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Ljava/lang/String;Lorg/jaxen/expr/PredicateSet;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultLocationPath" sourcefilename="DefaultLocationPath.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStep" desc="(Lorg/jaxen/expr/Step;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSteps" desc="()Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="75"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbsolute" desc="()Z" line="109"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReverseAxis" desc="(Lorg/jaxen/expr/Step;)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultVariableReferenceExpr" sourcefilename="DefaultVariableReferenceExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableName" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQName" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="13" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="63"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultCommentNodeStep" sourcefilename="DefaultCommentNodeStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Lorg/jaxen/expr/PredicateSet;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultAbsoluteLocationPath" sourcefilename="DefaultAbsoluteLocationPath.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbsolute" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultEqualityExpr" sourcefilename="DefaultEqualityExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="20" covered="96"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateSetSet" desc="(Ljava/util/List;Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/Boolean;" line="105"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateObjectObject" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Z" line="125"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="178"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/IdentitySet" sourcefilename="IdentitySet.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultMultiplicativeExpr" sourcefilename="DefaultMultiplicativeExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultMinusExpr" sourcefilename="DefaultMinusExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/NodeComparator" sourcefilename="NodeComparator.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/Navigator;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="67"><counter type="INSTRUCTION" missed="10" covered="159"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="4" covered="38"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonChild" desc="(Ljava/lang/Object;)Z" line="138"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareSiblings" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="145"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDepth" desc="(Ljava/lang/Object;)I" line="162"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="226"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="4" covered="57"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultTextNodeStep" sourcefilename="DefaultTextNodeStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Lorg/jaxen/expr/PredicateSet;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultModExpr" sourcefilename="DefaultModExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultXPathFactory" sourcefilename="DefaultXPathFactory.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createXPath" desc="(Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/XPathExpr;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPathExpr" desc="(Lorg/jaxen/expr/FilterExpr;Lorg/jaxen/expr/LocationPath;)Lorg/jaxen/expr/PathExpr;" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRelativeLocationPath" desc="()Lorg/jaxen/expr/LocationPath;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAbsoluteLocationPath" desc="()Lorg/jaxen/expr/LocationPath;" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOrExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/BinaryExpr;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/BinaryExpr;" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEqualityExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;I)Lorg/jaxen/expr/BinaryExpr;" line="94"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRelationalExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;I)Lorg/jaxen/expr/BinaryExpr;" line="110"><counter type="INSTRUCTION" missed="12" covered="26"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAdditiveExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;I)Lorg/jaxen/expr/BinaryExpr;" line="134"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMultiplicativeExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;I)Lorg/jaxen/expr/BinaryExpr;" line="150"><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUnaryExpr" desc="(Lorg/jaxen/expr/Expr;I)Lorg/jaxen/expr/Expr;" line="169"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUnionExpr" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/UnionExpr;" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFilterExpr" desc="(Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/FilterExpr;" line="184"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFunctionCallExpr" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/jaxen/expr/FunctionCallExpr;" line="189"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNumberExpr" desc="(I)Lorg/jaxen/expr/NumberExpr;" line="194"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createNumberExpr" desc="(D)Lorg/jaxen/expr/NumberExpr;" line="198"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLiteralExpr" desc="(Ljava/lang/String;)Lorg/jaxen/expr/LiteralExpr;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createVariableReferenceExpr" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/jaxen/expr/VariableReferenceExpr;" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNameStep" desc="(ILjava/lang/String;Ljava/lang/String;)Lorg/jaxen/expr/Step;" line="214"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTextNodeStep" desc="(I)Lorg/jaxen/expr/Step;" line="222"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCommentNodeStep" desc="(I)Lorg/jaxen/expr/Step;" line="227"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAllNodeStep" desc="(I)Lorg/jaxen/expr/Step;" line="232"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createProcessingInstructionNodeStep" desc="(ILjava/lang/String;)Lorg/jaxen/expr/Step;" line="238"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPredicate" desc="(Lorg/jaxen/expr/Expr;)Lorg/jaxen/expr/Predicate;" line="245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIterableAxis" desc="(I)Lorg/jaxen/expr/iter/IterableAxis;" line="250"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPredicateSet" desc="()Lorg/jaxen/expr/PredicateSet;" line="284"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="299"/><counter type="BRANCH" missed="5" covered="26"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="6" covered="46"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultMultiplyExpr" sourcefilename="DefaultMultiplyExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/PredicateSet" sourcefilename="PredicateSet.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPredicate" desc="(Lorg/jaxen/expr/Predicate;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicates" desc="()Ljava/util/List;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateAsBoolean" desc="(Ljava/util/List;Lorg/jaxen/ContextSupport;)Z" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="anyMatchingNode" desc="(Ljava/util/List;Lorg/jaxen/ContextSupport;)Z" line="163"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluatePredicates" desc="(Ljava/util/List;Lorg/jaxen/ContextSupport;)Ljava/util/List;" line="222"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyPredicate" desc="(Lorg/jaxen/expr/Predicate;Ljava/util/List;Lorg/jaxen/ContextSupport;)Ljava/util/List;" line="240"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="98" covered="177"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="28" covered="50"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultNameStep" sourcefilename="DefaultNameStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Ljava/lang/String;Ljava/lang/String;Lorg/jaxen/expr/PredicateSet;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocalName" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatchesAnyName" desc="()Z" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/util/List;" line="158"><counter type="INSTRUCTION" missed="33" covered="281"/><counter type="BRANCH" missed="9" covered="51"/><counter type="LINE" missed="4" covered="76"/><counter type="COMPLEXITY" missed="8" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Z" line="315"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNamespace" desc="(Ljava/lang/String;)Z" line="376"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchesNamespaceURIs" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="387"><counter type="INSTRUCTION" missed="8" covered="19"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="405"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="527"/><counter type="BRANCH" missed="16" covered="94"/><counter type="LINE" missed="5" covered="132"/><counter type="COMPLEXITY" missed="14" covered="51"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultGreaterThanExpr" sourcefilename="DefaultGreaterThanExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDoubleDouble" desc="(Ljava/lang/Double;Ljava/lang/Double;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultXPathExpr" sourcefilename="DefaultXPathExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootExpr" desc="()Lorg/jaxen/expr/Expr;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRootExpr" desc="(Lorg/jaxen/expr/Expr;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simplify" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="(Lorg/jaxen/Context;)Ljava/util/List;" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultNumberExpr" sourcefilename="DefaultNumberExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumber" desc="()Ljava/lang/Number;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultDivExpr" sourcefilename="DefaultDivExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultLogicalExpr" sourcefilename="DefaultLogicalExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultArithExpr" sourcefilename="DefaultArithExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultFilterExpr" sourcefilename="DefaultFilterExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/PredicateSet;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/PredicateSet;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPredicate" desc="(Lorg/jaxen/expr/Predicate;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicates" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPredicateSet" desc="()Lorg/jaxen/expr/PredicateSet;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpr" desc="()Lorg/jaxen/expr/Expr;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="108"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asBoolean" desc="(Lorg/jaxen/Context;)Z" line="125"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="67"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="20" covered="22"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultAllNodeStep" sourcefilename="DefaultAllNodeStep.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/iter/IterableAxis;Lorg/jaxen/expr/PredicateSet;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/Object;Lorg/jaxen/ContextSupport;)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultBinaryExpr" sourcefilename="DefaultBinaryExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLHS" desc="()Lorg/jaxen/expr/Expr;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLHS" desc="(Lorg/jaxen/expr/Expr;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRHS" desc="()Lorg/jaxen/expr/Expr;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRHS" desc="(Lorg/jaxen/expr/Expr;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="87"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="59"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultExpr" sourcefilename="DefaultExpr.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToIterator" desc="(Ljava/lang/Object;)Ljava/util/Iterator;" line="63"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToList" desc="(Ljava/lang/Object;)Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="()Lorg/jaxen/expr/Expr;" line="83"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="16"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultRelationalExpr" sourcefilename="DefaultRelationalExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="8" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateSetSet" desc="(Ljava/util/List;Ljava/util/List;Lorg/jaxen/Navigator;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateObjectObject" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/jaxen/Navigator;)Z" line="110"><counter type="INSTRUCTION" missed="4" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="119"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultPredicate" sourcefilename="DefaultPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpr" desc="()Lorg/jaxen/expr/Expr;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpr" desc="(Lorg/jaxen/expr/Expr;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simplify" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/jaxen/Context;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultGreaterThanEqualExpr" sourcefilename="DefaultGreaterThanEqualExpr.java"><method name="&lt;init&gt;" desc="(Lorg/jaxen/expr/Expr;Lorg/jaxen/expr/Expr;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDoubleDouble" desc="(Ljava/lang/Double;Ljava/lang/Double;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jaxen/expr/DefaultRelativeLocationPath" sourcefilename="DefaultRelativeLocationPath.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultEqualityExpr.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="17" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="2" cb="2"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="4"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="1" cb="3"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="4"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="2"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="2"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="178"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultPathExpr.java"><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="85" mi="0" ci="17" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="0" ci="9" mb="1" cb="1"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="1" cb="3"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="138"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultFilterExpr.java"><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="17" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="11" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="67"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="20" covered="22"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAbsoluteLocationPath.java"><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultDivExpr.java"><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IdentitySet.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="1" ci="8" mb="1" cb="1"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultLiteralExpr.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultStep.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="119"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultModExpr.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAndExpr.java"><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="17" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultTextNodeStep.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultXPathFactory.java"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="2"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="4"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="12" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="1" cb="3"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="9" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="9" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="14"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="12" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="299"/><counter type="BRANCH" missed="5" covered="26"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="6" covered="46"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultRelativeLocationPath.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultPredicate.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="78" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAllNodeStep.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultLocationPath.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="4"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="8"/><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultProcessingInstructionNodeStep.java"><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="1" cb="3"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="1" cb="3"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultVariableReferenceExpr.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="13" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="2" cb="2"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="63"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultPlusExpr.java"><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultGreaterThanEqualExpr.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultXPathExpr.java"><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultOrExpr.java"><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="17" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultCommentNodeStep.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultTruthExpr.java"><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="17" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="4"/><line nr="73" mi="0" ci="10" mb="0" cb="4"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="1" cb="3"/><line nr="92" mi="0" ci="10" mb="1" cb="3"/><line nr="99" mi="10" ci="0" mb="4" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="4"/><counter type="INSTRUCTION" missed="27" covered="60"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultNameStep.java"><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="1" cb="3"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="1" cb="3"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="4"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="1" cb="1"/><line nr="177" mi="13" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="1" cb="3"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="1" cb="3"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="2"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="1" cb="1"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="13" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="2"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="1" cb="3"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="1" cb="1"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="2"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="1" cb="3"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="2"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="2"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="2"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="2"/><line nr="326" mi="0" ci="4" mb="0" cb="2"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="2"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="2"/><line nr="335" mi="0" ci="4" mb="0" cb="2"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="2"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="2"/><line nr="347" mi="0" ci="15" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="2"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="4"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="9" mb="0" cb="4"/><line nr="387" mi="0" ci="3" mb="0" cb="2"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="2"/><line nr="391" mi="1" ci="6" mb="1" cb="1"/><line nr="393" mi="0" ci="2" mb="1" cb="1"/><line nr="394" mi="7" ci="0" mb="2" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="12" ci="8" mb="1" cb="1"/><line nr="407" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="527"/><counter type="BRANCH" missed="16" covered="94"/><counter type="LINE" missed="5" covered="132"/><counter type="COMPLEXITY" missed="14" covered="51"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeComparator.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="2" ci="3" mb="1" cb="1"/><line nr="70" mi="2" ci="3" mb="1" cb="1"/><line nr="72" mi="0" ci="8" mb="0" cb="4"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="10" mb="0" cb="4"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="4"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="14" mb="0" cb="4"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="2"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="226"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="4" covered="57"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultEqualsExpr.java"><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="17" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultNumberExpr.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAdditiveExpr.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="23" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultBinaryExpr.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="24" mb="0" cb="0"/><line nr="83" mi="23" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="59"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultLessThanEqualExpr.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultMultiplicativeExpr.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultRelationalExpr.java"><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="17" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="1" cb="1"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="2" cb="2"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="2" cb="2"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="2" cb="2"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="119"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultUnaryExpr.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultExpr.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="16"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultUnionExpr.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="17" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultNotEqualsExpr.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="17" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="2"/><line nr="79" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultLessThanExpr.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultArithExpr.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultMinusExpr.java"><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PredicateSet.java"><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="2" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="2"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="2"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="2"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="2"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="177"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="28" covered="50"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultLogicalExpr.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultMultiplyExpr.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultGreaterThanExpr.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultFunctionCallExpr.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="2" cb="2"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="17" ci="0" mb="0" cb="0"/><line nr="151" mi="22" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="1" cb="3"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="178"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="6" covered="47"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="766" covered="3334"/><counter type="BRANCH" missed="87" covered="366"/><counter type="LINE" missed="109" covered="812"/><counter type="COMPLEXITY" missed="99" covered="389"/><counter type="METHOD" missed="30" covered="222"/><counter type="CLASS" missed="0" covered="46"/></package><counter type="INSTRUCTION" missed="6319" covered="13944"/><counter type="BRANCH" missed="1457" covered="1848"/><counter type="LINE" missed="1318" covered="3709"/><counter type="COMPLEXITY" missed="1378" covered="1528"/><counter type="METHOD" missed="341" covered="851"/><counter type="CLASS" missed="14" covered="161"/></report>