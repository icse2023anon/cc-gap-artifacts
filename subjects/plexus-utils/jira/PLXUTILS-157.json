{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"143855","self":"http://jira.codehaus.org/rest/api/latest/issue/143855","key":"PLXUTILS-157","fields":{"progress":{"progress":0,"total":0},"summary":"MXParser.getText() creates strings without intern()","timetracking":{},"issuetype":{"self":"http://jira.codehaus.org/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"http://jira.codehaus.org/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"customfield_10110":null,"votes":{"self":"http://jira.codehaus.org/rest/api/2/issue/PLXUTILS-157/votes","votes":0,"hasVoted":false},"resolution":null,"fixVersions":[],"resolutiondate":null,"customfield_10210":"0.0","timespent":null,"reporter":{"self":"http://jira.codehaus.org/rest/api/2/user?username=j.kubrynski","name":"j.kubrynski","emailAddress":"jkubrynski@gmail.com","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&avatarId=10232","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&avatarId=10232","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&avatarId=10232","48x48":"http://jira.codehaus.org/secure/useravatar?avatarId=10232"},"displayName":"Jakub Kubrynski","active":true},"aggregatetimeoriginalestimate":null,"customfield_10161":["j.kubrynski(j.kubrynski)","krosenvold(krosenvold)","mkleint(mkleint)","mcculls(mcculls)"],"customfield_10160":null,"updated":"2013-03-12T02:53:26.233-0500","created":"2013-01-30T16:46:22.833-0600","description":"As in summary. Creating new string each time the method is executed results in PermGen error.","priority":{"self":"http://jira.codehaus.org/rest/api/2/priority/3","iconUrl":"http://jira.codehaus.org/images/icons/priorities/major.png","name":"Major","id":"3"},"duedate":null,"issuelinks":[],"customfield_10163":"58233600","watches":{"self":"http://jira.codehaus.org/rest/api/2/issue/PLXUTILS-157/watchers","watchCount":4,"isWatching":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"subtasks":[],"status":{"self":"http://jira.codehaus.org/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"http://jira.codehaus.org/images/icons/statuses/open.png","name":"Open","id":"1"},"customfield_10090":null,"labels":[],"workratio":-1,"assignee":null,"attachment":[],"customfield_10221":null,"customfield_10220":null,"customfield_10200":null,"aggregatetimeestimate":null,"customfield_10190":null,"project":{"self":"http://jira.codehaus.org/rest/api/2/project/11432","id":"11432","key":"PLXUTILS","name":"Plexus Utils","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/projectavatar?size=xsmall&pid=11432&avatarId=10011","24x24":"http://jira.codehaus.org/secure/projectavatar?size=small&pid=11432&avatarId=10011","32x32":"http://jira.codehaus.org/secure/projectavatar?size=medium&pid=11432&avatarId=10011","48x48":"http://jira.codehaus.org/secure/projectavatar?pid=11432&avatarId=10011"},"projectCategory":{"self":"http://jira.codehaus.org/rest/api/2/projectCategory/10003","id":"10003","description":"various containers","name":"containers"}},"versions":[],"customfield_10170":null,"environment":null,"timeestimate":null,"customfield_10130":null,"aggregateprogress":{"progress":0,"total":0},"lastViewed":null,"components":[],"comment":{"startAt":0,"maxResults":5,"total":5,"comments":[{"self":"http://jira.codehaus.org/rest/api/2/issue/143855/comment/321780","id":"321780","author":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"body":"Since we love numbers, I quickly instrumented p-u to see which texts were being created in an arbitrary multi-module build. The following list strings which were instantiated;\r\n\r\n(The first few are whitespace combos and do not render well in jira)\r\n\r\n\r\n\t\t\t\t\t\t:324\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        :632\r\n                            :614\r\n                        :673\r\n                      :292\r\n                    :1494\r\n                  :1589\r\n                :2249\r\n              :2822\r\n            :3065\r\n          :7480\r\n        :3608\r\n      :1973\r\n    :650\r\n${jetty.version}:314\r\n${plexus.utils.version}:210\r\n${project.version}:1136\r\n${spring.version}:405\r\n+1:310\r\n1.0-SNAPSHOT:221\r\n1.0:326\r\n1.1:244\r\n1.3:289\r\n1.4:298\r\n1.5:396\r\n1.7:202\r\n2.1:300\r\n2.2:261\r\n2.3:275\r\n2.4:263\r\n2.5:314\r\n4.0.0:917\r\nASF:248\r\nCommitter:395\r\nDeveloper:327\r\nJava Developer:222\r\nPMC Member:412\r\nString usage report\r\nUTF-8:240\r\nboolean:221\r\ncommons-logging:254\r\ncompile:254\r\ndefault:286\r\nfalse:1681\r\njar:969\r\njava.lang.String:203\r\njunit:794\r\nlog4j:230\r\nmaven-assembly-plugin:282\r\nmaven-compiler-plugin:318\r\nmaven-gpg-plugin:240\r\nmaven-jar-plugin:314\r\nmaven-javadoc-plugin:523\r\nmaven-jxr-plugin:205\r\nmaven-pmd-plugin:202\r\nmaven-release-plugin:275\r\nmaven-site-plugin:349\r\nmaven-source-plugin:308\r\nmaven-surefire-plugin:386\r\norg.apache.maven.doxia:206\r\norg.apache.maven.plugins:4072\r\norg.apache.maven.wagon:318\r\norg.apache.maven:575\r\norg.apache.wicket:360\r\norg.codehaus.mojo:576\r\norg.codehaus.plexus:1047\r\norg.eclipse.jetty:392\r\norg.seleniumhq.selenium:215\r\norg.slf4j:361\r\norg.springframework:638\r\npackage:230\r\nplexus-utils:383\r\npom:427\r\nprovided:383\r\nrepo:213\r\ntest:1049\r\ntrue:3104\r\n\r\n\r\nlargeDuped = 59770 (number of strings that were instantiated > 200 times)\r\ntotalLarge = 764801 (total #chars that were allocated as a consequence (string.length * numallocs)\r\n\r\noverallDuped = 128597 All strings that were instantiated\r\ntotalOverall = 2230676 #total allocated #chars \r\n\r\nI made no attempt to study who was retaining strings, but it seems fairly obvious that groupid and artifactid are retained...\r\n","updateAuthor":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"created":"2013-03-11T12:55:08.704-0500","updated":"2013-03-11T12:59:32.096-0500"},{"self":"http://jira.codehaus.org/rest/api/2/issue/143855/comment/321781","id":"321781","author":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"body":"Please note there is some interesting history/discussion at https://github.com/sonatype/plexus-utils/pull/9","updateAuthor":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"created":"2013-03-11T12:57:56.807-0500","updated":"2013-03-11T12:57:56.807-0500"},{"self":"http://jira.codehaus.org/rest/api/2/issue/143855/comment/321789","id":"321789","author":{"self":"http://jira.codehaus.org/rest/api/2/user?username=mkleint","name":"mkleint","emailAddress":"mkleint@codehaus.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&avatarId=10232","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&avatarId=10232","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&avatarId=10232","48x48":"http://jira.codehaus.org/secure/useravatar?avatarId=10232"},"displayName":"Milos Kleint","active":true},"body":"no matter what the solution, for IDE embedding would be great if there were a way share the strings across invokations.  eg 20 inter-related projects are likely to share quite a deal of strings but each is loaded individually.","updateAuthor":{"self":"http://jira.codehaus.org/rest/api/2/user?username=mkleint","name":"mkleint","emailAddress":"mkleint@codehaus.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&avatarId=10232","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&avatarId=10232","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&avatarId=10232","48x48":"http://jira.codehaus.org/secure/useravatar?avatarId=10232"},"displayName":"Milos Kleint","active":true},"created":"2013-03-11T15:30:03.526-0500","updated":"2013-03-11T15:30:03.526-0500"},{"self":"http://jira.codehaus.org/rest/api/2/issue/143855/comment/321794","id":"321794","author":{"self":"http://jira.codehaus.org/rest/api/2/user?username=mcculls","name":"mcculls","emailAddress":"mcculls@gmail.com","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&avatarId=10232","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&avatarId=10232","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&avatarId=10232","48x48":"http://jira.codehaus.org/secure/useravatar?avatarId=10232"},"displayName":"Stuart McCulloch","active":true},"body":"I think the modello generator is a good candidate - it generates code that uses MXParser to construct in-memory models and it already has a per-element option to trim strings. A similar per-element intern option would let you specify which elements of the model should be interned (such as the groupId) on a case-by-case basis.","updateAuthor":{"self":"http://jira.codehaus.org/rest/api/2/user?username=mcculls","name":"mcculls","emailAddress":"mcculls@gmail.com","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&avatarId=10232","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&avatarId=10232","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&avatarId=10232","48x48":"http://jira.codehaus.org/secure/useravatar?avatarId=10232"},"displayName":"Stuart McCulloch","active":true},"created":"2013-03-11T16:06:20.581-0500","updated":"2013-03-11T16:06:20.581-0500"},{"self":"http://jira.codehaus.org/rest/api/2/issue/143855/comment/321802","id":"321802","author":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"body":"The numbers in my simple test would seem to indicate approximately 5-10mb generated strings for this arbitrary build. As I understand this, interning a portion of these would simply lead to these being gc'ed on the young generation as opposed to growing older, for a slight drop in overall memory usage for a slight incerease in cpu usage for interning. While it is certainly worth looking into, I am somewhat sceptical to the overall gains in terms of performance; I would definitely like to see some real numbers before making any such flag a reality. I am assuming that we keep references to everything in the pom files, which would seem to indicate interning *whitespace* would be the biggest win ;)","updateAuthor":{"self":"http://jira.codehaus.org/rest/api/2/user?username=krosenvold","name":"krosenvold","emailAddress":"krosenvold@apache.org","avatarUrls":{"16x16":"http://jira.codehaus.org/secure/useravatar?size=xsmall&ownerId=krosenvold&avatarId=11127","24x24":"http://jira.codehaus.org/secure/useravatar?size=small&ownerId=krosenvold&avatarId=11127","32x32":"http://jira.codehaus.org/secure/useravatar?size=medium&ownerId=krosenvold&avatarId=11127","48x48":"http://jira.codehaus.org/secure/useravatar?ownerId=krosenvold&avatarId=11127"},"displayName":"Kristian Rosenvold","active":true},"created":"2013-03-12T02:53:26.233-0500","updated":"2013-03-12T02:53:26.233-0500"}]},"timeoriginalestimate":null,"aggregatetimespent":null}}